{"version":3,"sources":["webpack://mantine-docs/./src/components/Gallery/components/ComponentPreviewControls/ComponentPreviewControls.tsx","webpack://mantine-docs/./src/components/Gallery/GalleryComponentPage.tsx"],"names":["ComponentPreviewControls","props","Affix","position","bottom","left","right","zIndex","CanvasHeader","excludeExternal","style","borderBottom","GalleryComponentPage","pageContext","useState","state","setState","primaryColor","setPrimaryColor","theme","useMantineTheme","Component","GalleryComponents","_component","paddingBottom","Head","title","attributes","onStateChange","onPrimaryColorChange","padding","canvas","maxWidth","spacing","sm","GalleryPreview","withSpacing","MantineProvider","M","colorScheme","Prism","language","code"],"mappings":"oQAIO,SAASA,EAAyBC,GACvC,OACE,gBAACC,EAAA,EAAD,CAAOC,SAAU,CAAEC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAAKC,OAAQ,GACzD,gBAACC,EAAA,EAAD,iBAAkBP,EAAlB,CAAyBQ,iBAAe,EAACC,MAAO,CAAEC,aAAc,OCMvD,SAASC,EAAT,GAA2E,IAA3CC,EAA0C,EAA1CA,YAC7C,GAA0BC,cAAS,WAA5BC,EAAP,KAAcC,EAAd,KACA,GAAwCF,cAAS,QAA1CG,EAAP,KAAqBC,EAArB,KACMC,GAAQC,SACRC,EAAYC,EAAkBT,EAAYU,YAEhD,OACE,uBAAKb,MAAO,CAAEc,cAAe,KAC3B,gBAACC,EAAA,EAAD,CAAMC,MAAOb,EAAYc,WAAWD,QAEpC,gBAAC1B,EAAD,eACEe,MAAOA,EACPa,cAAeZ,EACfC,aAAcA,EACdY,qBAAsBX,GAClBL,IAGK,YAAVE,EACC,uBAAKL,MAAO,CAAEoB,QAASjB,EAAYc,WAAWI,OAAOC,SAAWb,EAAMc,QAAQC,GAAK,IACjF,gBAACC,EAAA,EAAD,CACEJ,OAAQlB,EAAYc,WAAWI,OAC/BK,cAAevB,EAAYc,WAAWI,OAAOC,UAE7C,gBAACK,EAAAC,EAAD,CAAiBnB,MAAO,CAAEoB,YAAapB,EAAMoB,YAAatB,iBACxD,gBAACI,EAAcR,EAAYc,WAAW1B,UAK5C,gBAACuC,EAAA,EAAD,CAAOC,SAAS,OAAO5B,EAAY6B","file":"component---src-components-gallery-gallery-component-page-tsx-f9f605b12bce379f09d3.js","sourcesContent":["import React from 'react';\nimport { Affix } from '@mantine/core';\nimport { CanvasHeader, CanvasHeaderProps } from '../ComponentCanvas/CanvasHeader/CanvasHeader';\n\nexport function ComponentPreviewControls(props: CanvasHeaderProps) {\n  return (\n    <Affix position={{ bottom: 0, left: 0, right: 0 }} zIndex={1}>\n      <CanvasHeader {...props} excludeExternal style={{ borderBottom: 0 }} />\n    </Affix>\n  );\n}\n","import React, { useState } from 'react';\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\nimport { Prism } from '@mantine/prism';\nimport Head from '../Head/Head';\nimport * as GalleryComponents from '../../gallery';\nimport { GalleryPreview } from './components/GalleryPreview/GalleryPreview';\nimport { ComponentPreviewControls } from './components/ComponentPreviewControls/ComponentPreviewControls';\nimport { GalleryComponent } from './types';\n\ninterface GalleryComponentPageProps {\n  pageContext: GalleryComponent;\n}\n\nexport default function GalleryComponentPage({ pageContext }: GalleryComponentPageProps) {\n  const [state, setState] = useState('preview');\n  const [primaryColor, setPrimaryColor] = useState('blue');\n  const theme = useMantineTheme();\n  const Component = GalleryComponents[pageContext._component];\n\n  return (\n    <div style={{ paddingBottom: 50 }}>\n      <Head title={pageContext.attributes.title} />\n\n      <ComponentPreviewControls\n        state={state}\n        onStateChange={setState}\n        primaryColor={primaryColor}\n        onPrimaryColorChange={setPrimaryColor}\n        {...pageContext}\n      />\n\n      {state === 'preview' ? (\n        <div style={{ padding: pageContext.attributes.canvas.maxWidth ? theme.spacing.sm : 0 }}>\n          <GalleryPreview\n            canvas={pageContext.attributes.canvas}\n            withSpacing={!!pageContext.attributes.canvas.maxWidth}\n          >\n            <MantineProvider theme={{ colorScheme: theme.colorScheme, primaryColor }}>\n              <Component {...pageContext.attributes.props} />\n            </MantineProvider>\n          </GalleryPreview>\n        </div>\n      ) : (\n        <Prism language=\"tsx\">{pageContext.code}</Prism>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}