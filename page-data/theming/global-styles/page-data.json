{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/theming/global-styles/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Global styles"},{"depth":2,"value":"NormalizeCSS"},{"depth":2,"value":"GlobalStyles"}],"frontmatter":{"title":"Global styles","package":null,"slug":"/theming/global-styles/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"theming\",\n  \"title\": \"Global styles\",\n  \"slug\": \"/theming/global-styles/\",\n  \"order\": 1.5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"global-styles\"\n  }, \"Global styles\"), mdx(\"p\", null, \"Mantine components do not depend on any global styles, however to help you build your own components\\n@mantine/core exports GlobalStyles and NormalizeCSS components.\"), mdx(\"h2\", {\n    \"id\": \"normalizecss\"\n  }, \"NormalizeCSS\"), mdx(\"p\", null, \"NormalizeCSS adds \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://necolas.github.io/normalize.css/\"\n  }, \"normalize.css\"), \" global styles with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cssinjs/normalize-jss\"\n  }, \"normalize-jss\"), \",\\nto use it add NormalizeCSS component at any place of your application:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { MantineProvider, NormalizeCSS } from '@mantine/core';\\n\\nfunction Demo() {\\n  return (\\n    <MantineProvider>\\n      <NormalizeCSS />\\n      <YourApp />\\n    </MantineProvider>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"globalstyles\"\n  }, \"GlobalStyles\"), mdx(\"p\", null, \"GlobalStyles component will help you work with dark color scheme, it sets body styles:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"background color to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.colors.dark[7]\"), \" in dark color scheme and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.white\"), \" in light\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"color to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.colors.dark[0]\"), \" in dark color scheme and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.black\"), \" in light\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"font-family and font-smoothing based on theme\")), mdx(\"p\", null, \"GlobalStyles must be included only once and rendered inside MantineProvider:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { MantineProvider, GlobalStyles } from '@mantine/core';\\n\\nfunction Demo() {\\n  return (\\n    <MantineProvider>\\n      <GlobalStyles />\\n      <YourApp />\\n    </MantineProvider>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"066b8403-2784-5e4f-847f-017b49faac93","slug":"theming/global-styles","__params":{"slug":"theming"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}