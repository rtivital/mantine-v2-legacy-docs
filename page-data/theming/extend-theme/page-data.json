{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/theming/extend-theme/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Extend theme"},{"depth":2,"value":"Typography"},{"depth":2,"value":"Default colors"},{"depth":2,"value":"Extend or replace colors"},{"depth":2,"value":"Primary color"},{"depth":2,"value":"Spacing, radius and shadows"},{"depth":2,"value":"Breakpoints"}],"frontmatter":{"title":"Extend theme","package":null,"slug":"/theming/extend-theme/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"theming\",\n  \"title\": \"Extend theme\",\n  \"slug\": \"/theming/extend-theme/\",\n  \"order\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"extend-theme\"\n  }, \"Extend theme\"), mdx(\"h2\", {\n    \"id\": \"typography\"\n  }, \"Typography\"), mdx(\"p\", null, \"By default Mantine uses system fonts. It brings fast and familiar experience to users.\\nYou can change fonts and other text styles for headings, code and all other components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.fontFamilyMonospace\"), \" \\u2013 controls components with monospace font-family, for example, \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/code/\"\n  }, \"Code\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/kbd/\"\n  }, \"Kbd\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.fontFamily\"), \" \\u2013 controls font-family in all other cases\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.lineHeight\"), \" \\u2013 controls line-height property in all components except headings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.fontSizes\"), \" \\u2013 controls font-size in all components except headings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.headings\"), \" \\u2013 controls font-family, line-heigh and font-size of h1-h6 tags in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/title/\"\n  }, \"Title\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/typography-styles-provider/\"\n  }, \"TypographyStylesProvider\"), \" components\")), mdx(ThemeFontsExtendDemo, {\n    mdxType: \"ThemeFontsExtendDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"default-colors\"\n  }, \"Default colors\"), mdx(\"p\", null, \"Mantine uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://yeun.github.io/open-color/\"\n  }, \"open-color\"), \" in default theme with some additions.\\nEach color has 10 shades.\"), mdx(\"p\", null, \"Colors are exposed on theme object as an array of strings,\\nyou can access color shade by color name and index (0-9), colors with larger index are darker:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"theme.colors.red[5];\\ntheme.colors.gray[9];\\ntheme.colors.blue[0];\\n\")), mdx(ThemeColors, {\n    mdxType: \"ThemeColors\"\n  }), mdx(\"h2\", {\n    \"id\": \"extend-or-replace-colors\"\n  }, \"Extend or replace colors\"), mdx(\"p\", null, \"You can add any amount of extra colors by extending theme.colors with MantineProvider.\\nThis will allow you to use these colors with all components which support color change,\\nfor example, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/button/\"\n  }, \"Button\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/badge/\"\n  }, \"Badge\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/switch/\"\n  }, \"Switch\"), \".\"), mdx(\"p\", null, \"Note that all colors that are added should \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always include 10 shades\"), \".\\nYou can use some of these tools to generate or copy ready color palettes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://themera.vercel.app/\"\n  }, \"Themera\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.materialui.co/colors\"\n  }, \"Material Design Colors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://omatsuri.app/color-shades-generator\"\n  }, \"Omatsuri\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://smart-swatch.netlify.app/\"\n  }, \"Smart Swatch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://palx.jxnblk.com/\"\n  }, \"Palx\"))), mdx(ThemeColorExtendDemo, {\n    mdxType: \"ThemeColorExtendDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"primary-color\"\n  }, \"Primary color\"), mdx(\"p\", null, \"Default primary color is blue, you can change it to any color defined in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.colors\"), \".\\nPrimary color is used:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in some components to determine color value if component didn't receive color prop;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"to define focus styles for all interactive elements.\")), mdx(\"p\", null, \"For example, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/button/\"\n  }, \"Button\"), \" Component\\nby default will use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"theme.primaryColor\"), \" (press any key on keyboard to see focus ring):\"), mdx(PrimaryColorDemo, {\n    mdxType: \"PrimaryColorDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"spacing-radius-and-shadows\"\n  }, \"Spacing, radius and shadows\"), mdx(\"p\", null, \"Mantine supports 5 sizes for spacing, radius and shadows: xs, sm, md, lg, xl.\\nThese values are exposed on theme:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.spacing\"), \" \\u2013 general spacing values used for paddings and margins, for example, to set padding on \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/paper/\"\n  }, \"Paper\"), \" or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/container/\"\n  }, \"Container\"), \" components or to calculate margins in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/typography-styles-provider/\"\n  }, \"TypographyStylesProvider\"), \" component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.shadows\"), \" \\u2013 box-shadow values \\u2013 used with components which extend \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/paper/\"\n  }, \"Paper\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/modal/\"\n  }, \"Modal\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/menu/\"\n  }, \"Menu\"), \" and others\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"theme.radius\"), \" \\u2013 border-radius values \\u2013 used in all components which support radius: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/paper/\"\n  }, \"Paper\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/button/\"\n  }, \"Button\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/input/\"\n  }, \"Input\"), \" and others\")), mdx(\"p\", null, \"Example with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/paper/\"\n  }, \"Paper\"), \" component (padding is set with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.spacing\"), \"):\"), mdx(Demo, {\n    data: PaperDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can change size values by setting corresponding properties.\\nIn this example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"xs and xl values from theme will be overwritten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sm, md and lg values will be used from default theme\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Button, Code, MantineProvider, Title } from '@mantine/core';\\n\\nfunction YourApp() {\\n  return (\\n    <MantineProvider\\n      theme={{\\n        spacing: {\\n          xs: 2,\\n          xl: 20,\\n        },\\n      }}\\n    >\\n      <Title order={3}>Georgia or serif title</Title>\\n      <Button>Verdana button</Button>\\n      <Code>Courier Code</Code>\\n    </MantineProvider>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"breakpoints\"\n  }, \"Breakpoints\"), mdx(\"p\", null, \"Mantine supports 5 sizes for breakpoints (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xs\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sm\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"md\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xl\"), \"), which are used for example in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/grid/\"\n  }, \"Grid\"), \" component.\"), mdx(\"p\", null, \"You can change the breakpoints by setting corresponding properties.\\nIn this example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sm and lg values from theme will be overwritten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"xs, md and xl values will be used from default theme\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { MantineProvider } from '@mantine/core';\\n\\nfunction YourApp() {\\n  return (\\n    <MantineProvider\\n      theme={{\\n        breakpoints: {\\n          sm: 800,\\n          lg: 1275,\\n        },\\n      }}\\n    >\\n      Hello World\\n    </MantineProvider>\\n  );\\n}\\n\")), mdx(\"p\", null, \"Mantine uses Bootstrap's breakpoint values as defaults:\"), mdx(DataTable, {\n    head: ['Breakpoint', 'Viewport width'],\n    data: Object.keys(DEFAULT_THEME.breakpoints).map(function (size) {\n      return [size, \"\".concat(DEFAULT_THEME.breakpoints[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"750198f8-f131-5197-bea3-7e70fc999a6c","slug":"theming/extend-theme","__params":{"slug":"theming"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}