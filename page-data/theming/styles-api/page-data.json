{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/theming/styles-api/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Styles API"},{"depth":2,"value":"Styling with classNames"},{"depth":2,"value":"Styling with inline styles"},{"depth":2,"value":"Static class names"},{"depth":2,"value":"More examples"},{"depth":3,"value":"Calendar component"},{"depth":3,"value":"Tabs component"},{"depth":3,"value":"Accordion component"}],"frontmatter":{"title":"Styles API","package":null,"slug":"/theming/styles-api/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"theming\",\n  \"title\": \"Styles API\",\n  \"slug\": \"/theming/styles-api/\",\n  \"order\": 4\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"styles-api\"\n  }, \"Styles API\"), mdx(\"p\", null, \"All Mantine components support styling of each component part with inline styles or by passing classNames.\"), mdx(\"h2\", {\n    \"id\": \"styling-with-classnames\"\n  }, \"Styling with classNames\"), mdx(\"p\", null, \"Let's say you want to make \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/slider/\"\n  }, \"Slider\"), \" component look something like this:\"), mdx(Demo, {\n    data: SliderDemos.customize,\n    demoProps: {\n      code: null\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"But default slider has completely different styles:\"), mdx(Demo, {\n    data: SliderDemos.configurator,\n    configuratorProps: {\n      includeCode: false\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"To apply your styles to Slider component, go to \\\"Styles API\\\" tab under component documentation and find\\nstyles names table. Name column will tell you how to target specific element in component:\"), mdx(DataTable, {\n    head: ['Name', 'Static selector', 'Description'],\n    data: Object.keys(CORE_STYLES_API.Slider).map(function (name) {\n      return [name, \".mantine-slider-\".concat(name), CORE_STYLES_API.Slider[name]];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"p\", null, \"For example, if you want to add styles to slider thumb:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Add className to thumb\\n<Slider classNames={{ thumb: 'my-slider-thumb' }} />\\n\\n// Add inline styles to thumb\\n<Slider styles={{ thumb: { backgroundColor: 'red' } }} />\\n\")), mdx(\"p\", null, \"Now you can write styles for your component with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/react-jss/\"\n  }, \"react-jss\"), \"\\nor any other any other styling tools and languages:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Slider, createStyles } from '@mantine/core';\\n\\nconst useStyles = createStyles((theme) => ({\\n  track: {\\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.blue[1],\\n  },\\n  mark: {\\n    width: 6,\\n    height: 6,\\n    borderRadius: 6,\\n    transform: 'translateX(-3px) translateY(-2px)',\\n    borderColor: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.blue[1],\\n  },\\n  markFilled: {\\n    borderColor: theme.colors.blue[6],\\n  },\\n  markLabel: { fontSize: theme.fontSizes.xs, marginBottom: 5, marginTop: 0 },\\n  thumb: {\\n    height: 16,\\n    width: 16,\\n    backgroundColor: theme.white,\\n    borderWidth: 1,\\n    boxShadow: theme.shadows.sm,\\n  },\\n}));\\n\\nfunction MyCustomSlider() {\\n  const classes = useStyles();\\n  return (\\n    <Slider\\n      classNames={{\\n        track: classes.track,\\n        label: classes.label,\\n        mark: classes.mark,\\n        markFilled: classes.markFilled,\\n        markLabel: classes.markLabel,\\n        markWrapper: classes.markWrapper,\\n        thumb: classes.thumb,\\n      }}\\n    />\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"styling-with-inline-styles\"\n  }, \"Styling with inline styles\"), mdx(\"p\", null, \"Same as in the above example \\u2013 to make this twitter button you will need to use styles API:\"), mdx(Demo, {\n    data: ButtonDemos.customize,\n    demoProps: {\n      code: null\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Styles names for button component:\"), mdx(DataTable, {\n    head: ['Name', 'Static selector', 'Description'],\n    data: Object.keys(CORE_STYLES_API.Button).map(function (name) {\n      return [name, \".mantine-button-\".concat(name), CORE_STYLES_API.Button[name]];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"p\", null, \"Here extra styles are required only for root element and left icon:\"), mdx(Demo, {\n    data: ButtonDemos.customize,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"static-class-names\"\n  }, \"Static class names\"), mdx(\"p\", null, \"Apart from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classNames\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"styles\"), \" props each component also has static classes on each element.\\nYou can use them to apply your styles if you do not use css modules or just do not want to pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classNames\"), \" prop.\"), mdx(\"h2\", {\n    \"id\": \"more-examples\"\n  }, \"More examples\"), mdx(\"h3\", {\n    \"id\": \"calendar-component\"\n  }, \"Calendar component\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/calendar/\"\n  }, \"Calendar\"), \" component customization with styles API:\"), mdx(Demo, {\n    data: CalendarDemos.stylesApi,\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"tabs-component\"\n  }, \"Tabs component\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/tabs/\"\n  }, \"Tabs\"), \" component customization with styles API:\"), mdx(Demo, {\n    data: TabsDemos.stylesApi,\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"accordion-component\"\n  }, \"Accordion component\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/accordion/\"\n  }, \"Accordion\"), \" component customization with styles API:\"), mdx(Demo, {\n    data: AccordionDemos.stylesApi,\n    mdxType: \"Demo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"923df73f-aae8-524f-8523-32acb65bab60","slug":"theming/styles-api","__params":{"slug":"theming"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}