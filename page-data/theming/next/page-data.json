{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/theming/next/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Usage with Next.js"},{"depth":2,"value":"Get started with template"},{"depth":2,"value":"Adding to existing Next.js project"},{"depth":2,"value":"NextLink component"}],"frontmatter":{"title":"Usage with Next.js","package":null,"slug":"/theming/next/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"theming\",\n  \"title\": \"Usage with Next.js\",\n  \"slug\": \"/theming/next/\",\n  \"order\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"usage-with-nextjs\"\n  }, \"Usage with Next.js\"), mdx(\"p\", null, \"Mantine is fully compatible with Next.js, follow following guide to setup your application\"), mdx(\"h2\", {\n    \"id\": \"get-started-with-template\"\n  }, \"Get started with template\"), mdx(\"p\", null, \"If you are starting new project you can skip all configuration steps and use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mantinedev/mantine-next-template\"\n  }, \"Next.js template\"), \".\\nTo get started \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mantinedev/mantine-next-template/generate\"\n  }, \"follow this link\"), \" and create new repository.\\nAlternatively you can download or clone \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mantinedev/mantine-next-template\"\n  }, \"repository\"), \" to get started on your machine.\"), mdx(\"h2\", {\n    \"id\": \"adding-to-existing-nextjs-project\"\n  }, \"Adding to existing Next.js project\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pages/_document.tsx\"), \" file:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import Document, { Html, Head, Main, NextScript, DocumentContext } from 'next/document';\\nimport { SsrProvider, SheetsRegistry, ServerStyles } from '@mantine/core';\\n\\nexport default class _Document extends Document {\\n  static async getInitialProps(ctx: DocumentContext) {\\n    const registry = new SheetsRegistry();\\n    const originalRenderPage = ctx.renderPage;\\n\\n    ctx.renderPage = () =>\\n      originalRenderPage({\\n        // eslint-disable-next-line react/display-name\\n        enhanceApp: (App) => (props) =>\\n          (\\n            <SsrProvider registry={registry}>\\n              <App {...props} />\\n            </SsrProvider>\\n          ),\\n      });\\n\\n    const initialProps = await Document.getInitialProps(ctx);\\n\\n    return {\\n      ...initialProps,\\n      styles: (\\n        <>\\n          {initialProps.styles}\\n          <ServerStyles registry={registry} />\\n        </>\\n      ),\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Html>\\n        <Head>\\n          <link rel=\\\"icon\\\" href=\\\"link to favicon\\\" />\\n        </Head>\\n        <body>\\n          <Main />\\n          <NextScript />\\n        </body>\\n      </Html>\\n    );\\n  }\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Replace your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pages/_app.tsx\"), \" with\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { AppProps } from 'next/app';\\nimport Head from 'next/head';\\nimport {\\n  MantineProvider,\\n  NormalizeCSS,\\n  GlobalStyles,\\n  useStylesCleanup,\\n  SsrProvider,\\n} from '@mantine/core';\\n\\nexport default function App(props: AppProps) {\\n  const { Component, pageProps } = props;\\n\\n  useStylesCleanup();\\n\\n  return (\\n    <>\\n      <SsrProvider>\\n        <Head>\\n          <title>Mantine next example</title>\\n          <meta name=\\\"viewport\\\" content=\\\"minimum-scale=1, initial-scale=1, width=device-width\\\" />\\n        </Head>\\n\\n        <MantineProvider\\n          theme={{\\n            /* Put your mantine theme override here */\\n            colorScheme: 'light',\\n          }}\\n        >\\n          {/* NormalizeCSS and GlobalStyles are optional */}\\n          <NormalizeCSS />\\n          <GlobalStyles />\\n          <Component {...pageProps} />\\n        </MantineProvider>\\n      </SsrProvider>\\n    </>\\n  );\\n}\\n\")), mdx(\"p\", null, \"All done! You can start developing your application. If you experience any issues with Next.js \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mantinedev/mantine/issues/new\"\n  }, \"please report an issue\"), \".\"), mdx(\"h2\", {\n    \"id\": \"nextlink-component\"\n  }, \"NextLink component\"), mdx(\"p\", null, \"Some Mantine components support changing root element via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop (e.g. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/button/\"\n  }, \"Button\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/action-icon/\"\n  }, \"ActionIcon\"), \").\\nIn order to make this prop work correctly with Next Link component create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NextLink\"), \" wrapper in your components folder:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { forwardRef } from 'react';\\nimport Link from 'next/link';\\n\\nexport const NextLink = forwardRef(\\n  (\\n    { href, ...others }: React.ComponentPropsWithoutRef<typeof Link>,\\n    ref: React.ForwardedRef<HTMLAnchorElement>\\n  ) => (\\n    <Link href={href}>\\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content */}\\n      <a {...others} ref={ref} />\\n    </Link>\\n  )\\n);\\n\")), mdx(\"p\", null, \"Then you can use it with any Mantine component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Button, ActionIcon } from '@mantine/core';\\nimport { NextLink } from '../components/NextLink/NextLink';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <Button component={NextLink} href=\\\"/hello\\\">\\n        My next link button\\n      </Button>\\n      <ActionIcon component={NextLink} href=\\\"/hello\\\">\\n        $\\n      </ActionIcon>\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"9094fc7e-70fe-5695-afd9-d5aef0608dfa","slug":"theming/next","__params":{"slug":"theming"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}