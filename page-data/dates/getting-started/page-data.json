{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/dates/getting-started/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Installation"},{"depth":2,"value":"Localization"},{"depth":2,"value":"Components"},{"depth":3,"value":"DatePicker"},{"depth":3,"value":"DateRangePicker"},{"depth":3,"value":"TimeInput"},{"depth":3,"value":"Calendar"},{"depth":3,"value":"RangeCalendar"},{"depth":3,"value":"Month"},{"depth":2,"value":"Utility functions"}],"frontmatter":{"title":"Getting started","package":"@mantine/dates","slug":"/dates/getting-started/","props":null,"import":null,"docs":null,"source":"mantine-dates/","description":"Capture date inputs from user and display calendars","bundleSize":"@mantine/dates","installation":"@mantine/dates","pageTitle":"Mantine Dates","license":"MIT","styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-dates\",\n  \"package\": \"@mantine/dates\",\n  \"title\": \"Getting started\",\n  \"pageTitle\": \"Mantine Dates\",\n  \"description\": \"Capture date inputs from user and display calendars\",\n  \"order\": 0,\n  \"slug\": \"/dates/getting-started/\",\n  \"installation\": \"@mantine/dates\",\n  \"bundleSize\": \"@mantine/dates\",\n  \"source\": \"mantine-dates/\",\n  \"license\": \"MIT\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"installation\"\n  }, \"Installation\"), mdx(\"p\", null, \"Package depends on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/react\"\n  }, \"react\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/react-dom\"\n  }, \"react-dom\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/dayjs\"\n  }, \"dayjs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/@mantine/hooks\"\n  }, \"@mantine/hooks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/@mantine/core\"\n  }, \"@mantine/core\"))), mdx(\"p\", null, \"Install with npm:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npm install dayjs @mantine/core @mantine/hooks @mantine/dates\\n\")), mdx(\"p\", null, \"Install with yarn:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"yarn add dayjs @mantine/core @mantine/hooks @mantine/dates\\n\")), mdx(\"h2\", {\n    \"id\": \"localization\"\n  }, \"Localization\"), mdx(\"p\", null, \"Mantine dates use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://day.js.org/\"\n  }, \"dayjs\"), \" library for localization.\\nFollow \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://day.js.org/docs/en/i18n/loading-into-nodejs\"\n  }, \"example\"), \" to load required locales in your application:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Import German language\\nimport 'dayjs/locale/de';\\n\")), mdx(\"p\", null, \"Then when you use components provide imported locale:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { DatePicker, Calendar, Month } from '@mantine/dates';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <DatePicker locale=\\\"de\\\" />\\n      <Calendar locale=\\\"de\\\" />\\n      <Month locale=\\\"de\\\" />\\n    </>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"components\"\n  }, \"Components\"), mdx(\"h3\", {\n    \"id\": \"datepicker\"\n  }, \"DatePicker\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/date-picker/\"\n  }, \"DatePicker\"), \" allows you to capture dates without free\\nuser input. Component supports the same props as any other input from @mantine/core library and can be\\nused in forms:\"), mdx(Demo, {\n    data: DatePickerDemos.usage,\n    demoProps: {\n      toggle: true,\n      zIndex: 5\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"daterangepicker\"\n  }, \"DateRangePicker\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/date-range-picker/\"\n  }, \"DateRangePicker\"), \" allows you to capture dates range\\nfrom user:\"), mdx(Demo, {\n    data: DateRangePickerDemos.usage,\n    demoProps: {\n      toggle: true,\n      zIndex: 4\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"timeinput\"\n  }, \"TimeInput\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/time-input/\"\n  }, \"TimeInput\"), \" component allows to capture time input from\\nuser:\"), mdx(Demo, {\n    data: TimeInputDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"calendar\"\n  }, \"Calendar\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/calendar/\"\n  }, \"Calendar\"), \" component allows you to capture date input fom\\nuser or display events:\"), mdx(Demo, {\n    data: CalendarDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"rangecalendar\"\n  }, \"RangeCalendar\"), mdx(\"p\", null, \"Capture dates range input with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/range-calendar/\"\n  }, \"RangeCalendar\"), \" component:\"), mdx(Demo, {\n    data: RangeCalendarDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"month\"\n  }, \"Month\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/month/\"\n  }, \"Month\"), \" component displays given month, it is the most basic\\ncomponent which is used in all other components. You can use it to create your own date pickers and calendars\\nif Mantine components do not fit your requirements:\"), mdx(Demo, {\n    data: MonthDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"utility-functions\"\n  }, \"Utility functions\"), mdx(\"p\", null, \"Apart from components @mantine/dates package also exports several utility function to help you build\\nyour own dates related components\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"get-month-days\")), mdx(\"p\", null, \"Returns an array of weeks of current month, used to build \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/month/\"\n  }, \"Month\"), \" component\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { getMonthDays } from '@mantine/dates';\\n\\ngetMonthDays(new Date()); // -> [[7xDate objects] x amount of weeks in current month]\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"get-months-names\")), mdx(\"p\", null, \"Returns full months names for given locale, used in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/calendar/\"\n  }, \"Calendar\"), \" component to render month select\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { getMonthsNames } from '@mantine/dates';\\n\\ngetMonthsNames('en');\\n// -> [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\\n\\n// to localize import locale from dayjs package\\nimport 'dayjs/locale/ru';\\nimport { getMonthsNames } from '@mantine/dates';\\n\\ngetMonthsNames('ru');\\n// -> ['\\u044F\\u043D\\u0432\\u0430\\u0440\\u044C','\\u0444\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C','\\u043C\\u0430\\u0440\\u0442','\\u0430\\u043F\\u0440\\u0435\\u043B\\u044C','\\u043C\\u0430\\u0439','\\u0438\\u044E\\u043D\\u044C','\\u0438\\u044E\\u043B\\u044C','\\u0430\\u0432\\u0433\\u0443\\u0441\\u0442','\\u0441\\u0435\\u043D\\u0442\\u044F\\u0431\\u0440\\u044C','\\u043E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044C','\\u043D\\u043E\\u044F\\u0431\\u0440\\u044C','\\u0434\\u0435\\u043A\\u0430\\u0431\\u0440\\u044C']\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"get-weekdays-names\")), mdx(\"p\", null, \"Returns an array of short weekdays names for given locale, used in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/month/\"\n  }, \"Month\"), \" component to render weekdays row\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { getWeekdaysNames } from '@mantine/dates';\\n\\ngetWeekdaysNames('en');\\n// -> ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"get-years-range\")), mdx(\"p\", null, \"Returns an array of years, which fall into given range, used in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/calendar/\"\n  }, \"Calendar\"), \" component to render year select\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { getYearsRange } from '@mantine/dates';\\n\\ngetYearsRange({ from: 2020, to: 2025 });\\n// -> [2020, 2021, 2022, 2023, 2024, 2025]\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"is-same-date\")), mdx(\"p\", null, \"Returns true if two dates have the same year, month and date, other properties (minutes, seconds, etc.) are ignored\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { isSameDate } from '@mantine/dates';\\n\\nisSameDate(new Date(2020, 7, 21), new Date(2020, 7, 21)); // -> true\\nisSameDate(new Date(2020, 7, 21), new Date(2020, 7, 22)); // -> false\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"is-same-month\")), mdx(\"p\", null, \"Returns true if two dates have the same year and month, other properties (date, minutes, seconds, etc.) are ignored\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { isSameMonth } from '@mantine/dates';\\n\\nisSameMonth(new Date(2020, 7, 21), new Date(2020, 7, 22)); // -> true\\nisSameMonth(new Date(2020, 7, 21), new Date(2020, 8, 22)); // -> false\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"2987049e-48e6-5c3e-a359-781ba40b5050","slug":"dates/getting-started","__params":{"slug":"dates"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}