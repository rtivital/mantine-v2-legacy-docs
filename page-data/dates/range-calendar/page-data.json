{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/dates/range-calendar/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Calendar props"},{"depth":2,"value":"Accessibility and usability"}],"frontmatter":{"title":"RangeCalendar","package":"@mantine/dates","slug":"/dates/range-calendar/","props":["RangeCalendar"],"import":"import { RangeCalendar } from '@mantine/dates';","docs":"dates/RangeCalendar.mdx","source":"mantine-dates/src/components/RangeCalendar/RangeCalendar.tsx","description":"Display calendar with dates range","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["RangeCalendar"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-dates\",\n  \"package\": \"@mantine/dates\",\n  \"title\": \"RangeCalendar\",\n  \"order\": 1,\n  \"slug\": \"/dates/range-calendar/\",\n  \"description\": \"Display calendar with dates range\",\n  \"props\": [\"RangeCalendar\"],\n  \"import\": \"import { RangeCalendar } from '@mantine/dates';\",\n  \"source\": \"mantine-dates/src/components/RangeCalendar/RangeCalendar.tsx\",\n  \"docs\": \"dates/RangeCalendar.mdx\",\n  \"styles\": [\"RangeCalendar\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: RangeCalendarDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"calendar-props\"\n  }, \"Calendar props\"), mdx(\"p\", null, \"RangeCalendar component uses the same props as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dates/calendar/\"\n  }, \"Calendar\"), \" component.\\nThe only difference is in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" props shown in previous example.\"), mdx(\"h2\", {\n    \"id\": \"accessibility-and-usability\"\n  }, \"Accessibility and usability\"), mdx(\"p\", null, \"To make all component controls visible to screen reader set following props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// When withSelect prop set to false\\n<RangeCalendar\\n  withSelect={false}\\n  nextMonthLabel=\\\"Next month\\\" // -> aria-label for button that switches to next month\\n  previousMonthLabel=\\\"Previous month\\\" // -> aria-label for button that switches to previous month\\n/>\\n\\n// When withSelect prop set to true\\n<RangeCalendar\\n  withSelect\\n  nextMonthLabel=\\\"Next month\\\" // -> aria-label for button that switches to next month\\n  previousMonthLabel=\\\"Previous month\\\" // -> aria-label for button that switches to previous month\\n  yearLabel=\\\"Select year\\\" // -> year select aria-label\\n  monthLabel=\\\"Select month\\\" // -> month select aria-label\\n/>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"6e58cf9b-506b-56b5-98cb-cf5cde88a96f","slug":"dates/range-calendar","__params":{"slug":"dates"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}