{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/hooks/use-debounced-value/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Leading update"},{"depth":2,"value":"Cancel update"},{"depth":2,"value":"Definition"}],"frontmatter":{"title":"use-debounced-value","package":"@mantine/hooks","slug":"/hooks/use-debounced-value/","props":null,"import":"import { useDebouncedValue } from '@mantine/hooks';","docs":"hooks/use-debounced-value.mdx","source":"mantine-hooks/src/use-debounced-value/use-debounced-value.ts","description":"Debounce value changes","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-hooks\",\n  \"package\": \"@mantine/hooks\",\n  \"category\": \"state\",\n  \"title\": \"use-debounced-value\",\n  \"order\": 1,\n  \"slug\": \"/hooks/use-debounced-value/\",\n  \"description\": \"Debounce value changes\",\n  \"import\": \"import { useDebouncedValue } from '@mantine/hooks';\",\n  \"docs\": \"hooks/use-debounced-value.mdx\",\n  \"source\": \"mantine-hooks/src/use-debounced-value/use-debounced-value.ts\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Use hook to debounce value change.\\nThis can be useful in case you want to perform a heavy operation based on react state,\\nfor example, send search request.\"), mdx(UseDebouncedValueBaseDemo, {\n    mdxType: \"UseDebouncedValueBaseDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"leading-update\"\n  }, \"Leading update\"), mdx(\"p\", null, \"You can remove immediately update value with first call with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ leading: true }\"), \" options:\"), mdx(UseDebouncedValueBaseDemo, {\n    leading: true,\n    mdxType: \"UseDebouncedValueBaseDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"cancel-update\"\n  }, \"Cancel update\"), mdx(\"p\", null, \"Hook provides cancel callback, you can use it to cancel update.\\nUpdate cancels automatically on component unmount.\"), mdx(\"p\", null, \"In this example, type in some text and click cancel button within a minute to cancel debounced value change:\"), mdx(UseDebouncedValueCancelDemo, {\n    mdxType: \"UseDebouncedValueCancelDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"definition\"\n  }, \"Definition\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"function useDebouncedValue<T = any>(\\n  value: T,\\n  wait: number,\\n  options?: {\\n    leading: boolean;\\n  }\\n): readonly [T, () => void];\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"bbf5077d-169e-5951-bc33-6a56221d9b80","slug":"hooks/use-debounced-value","__params":{"slug":"hooks"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}