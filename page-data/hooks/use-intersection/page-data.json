{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/hooks/use-intersection/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"API"},{"depth":2,"value":"Definition"}],"frontmatter":{"title":"use-intersection","package":"@mantine/hooks","slug":"/hooks/use-intersection/","props":null,"import":"import { useIntersection } from '@mantine/hooks';","docs":"hooks/use-intersection.mdx","source":"mantine-hooks/src/use-intersection/use-intersection.ts","description":"Get information about intersection of given element with its scroll container","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-hooks\",\n  \"package\": \"@mantine/hooks\",\n  \"category\": \"dom\",\n  \"title\": \"use-intersection\",\n  \"order\": 1,\n  \"slug\": \"/hooks/use-intersection/\",\n  \"description\": \"Get information about intersection of given element with its scroll container\",\n  \"import\": \"import { useIntersection } from '@mantine/hooks';\",\n  \"docs\": \"hooks/use-intersection.mdx\",\n  \"source\": \"mantine-hooks/src/use-intersection/use-intersection.ts\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Use hook to get information about intersection\\nof given element with its scroll container or body element with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\"\n  }, \"Intersection Observer API\"), \":\"), mdx(Demo, {\n    data: useIntersectionDemo,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"api\"\n  }, \"API\"), mdx(\"p\", null, \"Hook accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IntersectionObserver\"), \"'s options as its only optional argument:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"useIntersection({\\n  root: someDomElement,\\n  rootMargin: '0px',\\n  threshold: 1.0,\\n});\\n\")), mdx(\"p\", null, \"Hook returns ref function that should be passed to the observed element, and the latest entry, as returned by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IntersectionObserver\"), \"'s callback.\\nSee \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\"\n  }, \"Intersection Observer API\"), \" documentation to learn everything about options.\"), mdx(\"p\", null, \"On the first render (as well as during SSR), or when no element is being observed, the entry is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const [ref, ioEntry] = useIntersection();\\n\\n// With regular element:\\n<div ref={ref}>Observed</div>\\n\\n// With Mantine component:\\n<Paper elementRef={ref}>Observed</Paper>\\n\")), mdx(\"h2\", {\n    \"id\": \"definition\"\n  }, \"Definition\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"function useIntersection<T extends HTMLElement = any>(\\n  options?: ConstructorParameters<typeof IntersectionObserver>[1]\\n): readonly [(element: T | null) => void, IntersectionObserverEntry];\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"a1d5cb8d-b4e6-52bc-81b2-9ae6f1e28624","slug":"hooks/use-intersection","__params":{"slug":"hooks"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}