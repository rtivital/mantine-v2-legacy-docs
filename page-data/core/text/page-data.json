{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/text/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Dimmed"},{"depth":2,"value":"Gradient variant"},{"depth":2,"value":"Line clamp"},{"depth":2,"value":"Inherit styles"},{"depth":2,"value":"Custom component"}],"frontmatter":{"title":"Text","package":"@mantine/core","slug":"/core/text/","props":["Text"],"import":"import { Text } from '@mantine/core';","docs":"core/Text.mdx","source":"mantine-core/src/components/Text/Text.tsx","description":"Render text and links with theme styles","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Text","single-node"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Text\",\n  \"order\": 1,\n  \"slug\": \"/core/text/\",\n  \"category\": \"typography\",\n  \"description\": \"Render text and links with theme styles\",\n  \"props\": [\"Text\"],\n  \"import\": \"import { Text } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Text/Text.tsx\",\n  \"docs\": \"core/Text.mdx\",\n  \"styles\": [\"Text\", \"single-node\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Use Text component to render text and links with theme styles. Control Text styles with props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"size\"), \" \\u2013 font-size from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.fontSizes\"), \" \\u2013 xs, sm, md, lg, xl\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"color\"), \" \\u2013 color from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.colors\"), \" \\u2013 red, green, blue, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"weight\"), \" \\u2013 font-weight property \\u2013 500, 700, bold, semibold, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"transform\"), \" \\u2013 text-transform property \\u2013 uppercase, lowercase, capitalize\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"align\"), \" \\u2013 text-align property\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"variant\"), \" \\u2013 text or link predefined styles\")), mdx(Demo, {\n    data: TextDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"dimmed\"\n  }, \"Dimmed\"), mdx(\"p\", null, \"Text supports special \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dimmed\"), \" value in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" prop. It sets color to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.colors.dark[2]\"), \" in dark theme and to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.colors.gray[6]\"), \" in light:\"), mdx(Demo, {\n    data: TextDemos.dimmed,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"gradient-variant\"\n  }, \"Gradient variant\"), mdx(\"p\", null, \"To use gradient as Text color:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"variant\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradient\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradient\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{ from: 'color-from', to: 'color-to', deg: 135 }\"), \", where\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"color-from\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"color-to\"), \" are color from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.colors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deg\"), \" is linear gradient deg\")))), mdx(Demo, {\n    data: TextDemos.gradient,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"line-clamp\"\n  }, \"Line clamp\"), mdx(\"p\", null, \"You can specify maximum amount of lines with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lineClamp\"), \" prop. This option uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp\"\n  }, \"-webkit-line-clamp\"), \"\\nCSS property (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://caniuse.com/css-line-clamp\"\n  }, \"caniuse\"), \"). Note that you cannot set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"padding-bottom\"), \" on text element:\"), mdx(Demo, {\n    data: TextDemos.linesConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Line clamp can also be used with any children (not only strings), for example with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/typography-styles-provider/\"\n  }, \"TypographyStylesProvider\"), \":\"), mdx(Demo, {\n    data: TextDemos.lineClamp,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"inherit-styles\"\n  }, \"Inherit styles\"), mdx(\"p\", null, \"By default Text always applies font-size, font-family and line-height styles,\\nbut in some cases this is not a desired behavior. To force Text to inherit parent\\nstyles set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inherit\"), \" prop. For example, you can highlight part of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/title/\"\n  }, \"Title\"), \":\"), mdx(Demo, {\n    data: TextDemos.inherit,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"custom-component\"\n  }, \"Custom component\"), mdx(\"p\", null, \"By default text is rendered in div element, you can change it by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Link } from 'react-router-dom';\\n\\n<Text variant=\\\"link\\\" component={Link} to=\\\"/hello\\\">\\n  React router link\\n</Text>\\n\\n// same as above example\\n<Anchor component={Link} to=\\\"/hello\\\">\\n  React router link\\n</Anchor>\\n\\n<Text variant=\\\"link\\\" component=\\\"a\\\" href=\\\"https://mantine.dev\\\">\\n  Normal link\\n</Text>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"dbebdd81-7b18-5e3d-ae7d-06c299bc3d02","slug":"core/Text","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}