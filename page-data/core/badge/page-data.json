{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/badge/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Colors"},{"depth":2,"value":"Gradient variant"},{"depth":2,"value":"Size and radius"},{"depth":2,"value":"Full width and overflow"},{"depth":2,"value":"Right and left sections"},{"depth":2,"value":"Custom component"}],"frontmatter":{"title":"Badge","package":"@mantine/core","slug":"/core/badge/","props":["Badge"],"import":"import { Badge } from '@mantine/core';","docs":"core/Badge.mdx","source":"mantine-core/src/components/Badge/Badge.tsx","description":"Display badge, pill or tag","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Badge"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Badge\",\n  \"order\": 1,\n  \"slug\": \"/core/badge/\",\n  \"category\": \"data-display\",\n  \"description\": \"Display badge, pill or tag\",\n  \"props\": [\"Badge\"],\n  \"import\": \"import { Badge } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Badge/Badge.tsx\",\n  \"docs\": \"core/Badge.mdx\",\n  \"styles\": [\"Badge\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: BadgeDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"colors\"\n  }, \"Colors\"), mdx(\"p\", null, \"Default Badge color is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.primaryColor\"), \".\\nYou can use any color defined in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#default-colors\"\n  }, \"theme.colors\"), \".\\nNote that not all colors in some variants are compatible with dark theme:\"), mdx(Demo, {\n    data: BadgeDemos.colors,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"gradient-variant\"\n  }, \"Gradient variant\"), mdx(\"p\", null, \"To use gradient as Badge background:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"variant\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradient\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradient\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{ from: 'color-from', to: 'color-to', deg: 135 }\"), \", where\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"color-from\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"color-to\"), \" are color from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.colors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deg\"), \" is linear gradient deg\")))), mdx(Demo, {\n    data: BadgeDemos.gradient,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size-and-radius\"\n  }, \"Size and radius\"), mdx(\"p\", null, \"Control badge font-size, height and padding with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" and border-radius with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"radius\"), \".\\nBoth props have predefined values: xs, sm, md, lg, xl.\\nAlternatively, you can use a number to set radius in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Badge radius=\\\"lg\\\" /> // -> theme predefined large radius\\n<Badge radius={10} /> // -> { borderRadius: '10px' }\\n<Badge size=\\\"sm\\\" /> // -> predefined small size\\n\")), mdx(Demo, {\n    data: BadgeDemos.sizes,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can get predefined badge heights by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BADGE_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { BADGE_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Size', 'Badge height'],\n    data: Object.keys(BADGE_SIZES).map(function (size) {\n      return [size, \"\".concat(BADGE_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"full-width-and-overflow\"\n  }, \"Full width and overflow\"), mdx(\"p\", null, \"Badge will take full width of container if you set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fullWidth\"), \" prop.\\nIf badge cannot fit in its container, overflow content will be hidden with ellipsis:\"), mdx(Demo, {\n    data: BadgeDemos.overflow,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"right-and-left-sections\"\n  }, \"Right and left sections\"), mdx(\"p\", null, \"You can add any react node as right and left section to badge.\\nUse it to add interactive parts (for example, remove button) or additional information:\"), mdx(Demo, {\n    data: BadgeDemos.sections,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"custom-component\"\n  }, \"Custom component\"), mdx(\"p\", null, \"You can change badge root element by passing React element to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop.\"), mdx(Demo, {\n    data: BadgeDemos.component,\n    mdxType: \"Demo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"b51aef0f-530b-58d7-bebc-dce2b6cb8f0d","slug":"core/Badge","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}