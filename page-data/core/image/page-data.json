{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/image/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Width and height"},{"depth":2,"value":"Placeholder"},{"depth":2,"value":"With caption"},{"depth":2,"value":"Radius"},{"depth":2,"value":"Get element ref"}],"frontmatter":{"title":"Image","package":"@mantine/core","slug":"/core/image/","props":["Image"],"import":"import { Image } from '@mantine/core';","docs":"core/Image.mdx","source":"mantine-core/src/components/Image/Image.tsx","description":"Image with optional placeholder for loading and error state","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Image"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Image\",\n  \"order\": 1,\n  \"slug\": \"/core/image/\",\n  \"category\": \"data-display\",\n  \"description\": \"Image with optional placeholder for loading and error state\",\n  \"props\": [\"Image\"],\n  \"import\": \"import { Image } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Image/Image.tsx\",\n  \"docs\": \"core/Image.mdx\",\n  \"styles\": [\"Image\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Image component is a wrapper around img element with option to change object fit, radius and placeholder:\"), mdx(Demo, {\n    data: ImageDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"width-and-height\"\n  }, \"Width and height\"), mdx(\"p\", null, \"In example above image takes 100% of width of its container and height is calculated dynamically based on image proportion.\\nTo change this behavior set image width and height to define image size.\"), mdx(\"p\", null, \"Note that, if image proportions do not match given width and height some parts will be cut out.\\nIn case you want to show image in its original proportions but fitted in current width and height set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fit=\\\"contain\\\"\"), \":\"), mdx(Demo, {\n    data: ImageDemos.sizes,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"placeholder\"\n  }, \"Placeholder\"), mdx(\"p\", null, \"By default placeholders image placeholders are disabled.\\nImage placeholder is displayed in these cases:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"withPlaceholder\"), \" prop is set to true\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Image is currently loading\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error ocurred during image loading (e.g. broken link)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Image did not receive \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src\"), \" prop\")), mdx(\"p\", null, \"To customize image placeholder pass any react node to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"placeholder\"), \" prop.\\nPlaceholder size is determined by width and height props.\\nPlaceholder is centered vertically and horizontally across provided width and height.\"), mdx(Demo, {\n    data: ImageDemos.placeholders,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"with-caption\"\n  }, \"With caption\"), mdx(\"p\", null, \"You can add figcaption to an image with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"caption\"), \" prop:\"), mdx(Demo, {\n    data: ImageDemos.caption,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"radius\"\n  }, \"Radius\"), mdx(\"p\", null, \"Radius has predefined values: xs, sm, md, lg, xl which are defined in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#spacing-radius-and-shadows\"\n  }, \"theme.radius\"), \".\\nAlternatively, you can use a number to set border-radius in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Image radius={0} /> // -> default \\u2013 image has no radius\\n<Image radius=\\\"lg\\\" /> // -> theme predefined large radius\\n<Image radius={10} /> // -> { borderRadius: 10 }\\n\")), mdx(\"p\", null, \"Radius is applied both to image and placeholder.\"), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get both image and root element (div) refs with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"imageRef\"), \" props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useRef } from 'react';\\nimport { Image } from '@mantine/core';\\n\\nfunction Demo() {\\n  const imageRef = useRef();\\n  const rootElementRef = useRef();\\n  return <Image elementRef={rootElementRef} imageRef={imageRef} />;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"c4a2f22a-e743-598a-8d8f-90234b9ae55e","slug":"core/Image","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}