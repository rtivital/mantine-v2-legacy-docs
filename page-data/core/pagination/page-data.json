{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/pagination/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Controlled"},{"depth":2,"value":"Siblings"},{"depth":2,"value":"Boundaries"},{"depth":2,"value":"Accessibility"}],"frontmatter":{"title":"Pagination","package":"@mantine/core","slug":"/core/pagination/","props":["Pagination"],"import":"import { Pagination } from '@mantine/core';","docs":"core/Pagination.mdx","source":"mantine-core/src/components/Pagination/Pagination.tsx","description":"Display active page and navigate between multiple pages","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Pagination"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Pagination\",\n  \"order\": 1,\n  \"slug\": \"/core/pagination/\",\n  \"category\": \"navigation\",\n  \"description\": \"Display active page and navigate between multiple pages\",\n  \"props\": [\"Pagination\"],\n  \"import\": \"import { Pagination } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Pagination/Pagination.tsx\",\n  \"docs\": \"core/Pagination.mdx\",\n  \"styles\": [\"Pagination\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: PaginationDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlled\"\n  }, \"Controlled\"), mdx(\"p\", null, \"To control component state provide \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useState } from 'react';\\nimport { Pagination } from '@mantine/core';\\n\\nfunction Demo() {\\n  const [activePage, setPage] = useState(1);\\n\\n  return <Pagination page={activePage} onChange={setPage} />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"siblings\"\n  }, \"Siblings\"), mdx(\"p\", null, \"Control amount of active item siblings with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siblings\"), \" prop:\"), mdx(Demo, {\n    data: PaginationDemos.siblings,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"boundaries\"\n  }, \"Boundaries\"), mdx(\"p\", null, \"Control amount of items displayed after previous and before next buttons with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"boundaries\"), \" prop:\"), mdx(Demo, {\n    data: PaginationDemos.boundaries,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, \"Pagination renders a regular button element. To include aria-label for screen reader support\\nprovide \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getItemAriaLabel\"), \" function to generate aria-labels:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Pagination\\n  total={20}\\n  getItemAriaLabel={(page) => {\\n    switch (page) {\\n      case 'dots':\\n        return 'dots element aria-label';\\n      case 'prev':\\n        return 'previous page button aria-label';\\n      case 'next':\\n        return 'next page button aria-label';\\n      default:\\n        return `${page} item aria-label`;\\n    }\\n  }}\\n/>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"4fa0a7e8-9b62-5a44-80f5-643c620d0e37","slug":"core/Pagination","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}