{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/input-wrapper/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Change label element"}],"frontmatter":{"title":"InputWrapper","package":"@mantine/core","slug":"/core/input-wrapper/","props":["InputWrapper"],"import":"import { InputWrapper } from '@mantine/core';","docs":"core/InputWrapper.mdx","source":"mantine-core/src/components/InputWrapper/InputWrapper.tsx","description":"Enhance custom inputs with label, error and description","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["InputWrapper"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"InputWrapper\",\n  \"order\": 1,\n  \"slug\": \"/core/input-wrapper/\",\n  \"category\": \"inputs\",\n  \"description\": \"Enhance custom inputs with label, error and description\",\n  \"props\": [\"InputWrapper\"],\n  \"import\": \"import { InputWrapper } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/InputWrapper/InputWrapper.tsx\",\n  \"docs\": \"core/InputWrapper.mdx\",\n  \"styles\": [\"InputWrapper\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"InputWrapper is used to wrap for all Mantine inputs (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/select/\"\n  }, \"Select\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/text-input/\"\n  }, \"TextInput\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/textarea/\"\n  }, \"Textarea\"), \" and others).\\nIt includes label with optional required asterisk, description and error message.\"), mdx(\"p\", null, \"All Mantine inputs support the same props as InputWrapper.\\nYou can combine it with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/input/\"\n  }, \"Input\"), \" component\\nto build your own custom inputs with the same style and behavior.\"), mdx(Demo, {\n    data: InputWrapperDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-label-element\"\n  }, \"Change label element\"), mdx(\"p\", null, \"Some inputs like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/radio-group/\"\n  }, \"RadioGroup\"), \"\\nmay require to detach label from certain element.\\nTo implement this, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"labelElement\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { InputWrapper } from '@mantine/core';\\n\\n// id is required to connect label and input\\nfunction WithLabel() {\\n  return (\\n    <InputWrapper id=\\\"with-label\\\">\\n      <input id=\\\"with-label\\\" />\\n    </InputWrapper>\\n  );\\n}\\n\\n// id is not required for div label as it is not connected to any element\\nfunction WithoutLabel() {\\n  return (\\n    <InputWrapper labelElement=\\\"div\\\">\\n      <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"1\\\" />\\n      <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"2\\\" />\\n      <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"3\\\" />\\n    </InputWrapper>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"7fbbe821-3233-5d7b-8207-b900cb29e5b1","slug":"core/InputWrapper","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}