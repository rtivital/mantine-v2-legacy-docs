{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/blockquote/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Configure icon"}],"frontmatter":{"title":"Blockquote","package":"@mantine/core","slug":"/core/blockquote/","props":["Blockquote"],"import":"import { Blockquote } from '@mantine/core';","docs":"core/Blockquote.mdx","source":"mantine-core/src/components/Blockquote/Blockquote.tsx","description":"Blockquote with optional cite","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Blockquote"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Blockquote\",\n  \"order\": 1,\n  \"slug\": \"/core/blockquote/\",\n  \"category\": \"typography\",\n  \"description\": \"Blockquote with optional cite\",\n  \"props\": [\"Blockquote\"],\n  \"import\": \"import { Blockquote } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Blockquote/Blockquote.tsx\",\n  \"docs\": \"core/Blockquote.mdx\",\n  \"styles\": [\"Blockquote\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: BlockquoteDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"configure-icon\"\n  }, \"Configure icon\"), mdx(\"p\", null, \"You can use any React node as icon by passing it to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \" prop.\\nNote that component \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"does not control icon size\"), \" and you need to specify it manually on icon component for better fit.\"), mdx(\"p\", null, \"You can use icons from any react icons library, for example,\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://icons.modulz.app/\"\n  }, \"radix icons\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://feathericons.com/\"\n  }, \"feather icons\"), \"\\nor \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://react-icons.github.io/react-icons\"\n  }, \"react-icons\"), \":\"), mdx(Demo, {\n    data: BlockquoteDemos.icon,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"By default blockquote uses quote icon, to disable it, set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \" prop to null:\"), mdx(Demo, {\n    data: BlockquoteDemos.noIcon,\n    mdxType: \"Demo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"35957a1a-0a62-5709-a67e-f2521c476c94","slug":"core/Blockquote","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}