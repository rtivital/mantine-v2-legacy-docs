{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/avatar/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Placeholder"},{"depth":2,"value":"Size and radius"},{"depth":2,"value":"Change root element"},{"depth":2,"value":"Accessibility"}],"frontmatter":{"title":"Avatar","package":"@mantine/core","slug":"/core/avatar/","props":["Avatar"],"import":"import { Avatar } from '@mantine/core';","docs":"core/Avatar.mdx","source":"mantine-core/src/components/Avatar/Avatar.tsx","description":"Display user profile image, initials or fallback icon","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Avatar"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Avatar\",\n  \"order\": 1,\n  \"slug\": \"/core/avatar/\",\n  \"category\": \"data-display\",\n  \"description\": \"Display user profile image, initials or fallback icon\",\n  \"props\": [\"Avatar\"],\n  \"import\": \"import { Avatar } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Avatar/Avatar.tsx\",\n  \"docs\": \"core/Avatar.mdx\",\n  \"styles\": [\"Avatar\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: AvatarDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"placeholder\"\n  }, \"Placeholder\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" prop is not set, equals to null or image cannot be loaded,\\nplaceholder icon will be rendered instead.\\nYou can use any React node instead of placeholder icon.\\nUsually icon or initials are used in this case:\"), mdx(Demo, {\n    data: AvatarDemos.placeholders,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size-and-radius\"\n  }, \"Size and radius\"), mdx(Demo, {\n    data: AvatarDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Control avatar width and height with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" and border-radius with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"radius\"), \".\\nBoth props have predefined values: xs, sm, md, lg, xl.\\nAlternatively, you can use a number to set radius or size in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Avatar radius=\\\"lg\\\" /> // -> theme predefined large radius\\n<Avatar radius={10} /> // -> { borderRadius: '10px' }\\n\\n<Avatar size=\\\"sm\\\" /> // -> predefined small size\\n<Avatar size={50} /> // -> { width: '50px', height: '50px' }\\n\")), mdx(Demo, {\n    data: AvatarDemos.sizes,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can get predefined avatar sizes by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AVATAR_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { AVATAR_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Size', 'Width and height'],\n    data: Object.keys(AVATAR_SIZES).map(function (size) {\n      return [size, \"\".concat(AVATAR_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-root-element\"\n  }, \"Change root element\"), mdx(\"p\", null, \"You can set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop on Avatar to use provide custom root element,\\nfor example, you can make avatar a link:\"), mdx(Demo, {\n    data: AvatarDemos.link,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can also use React component instead of an element, for example, Link from react-router-dom:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Link } from 'react-router-dom';\\nimport { Card } from '@mantine/core';\\n\\nfunction Demo() {\\n  return <Avatar component={Link} to=\\\"/my-route/\\\" src=\\\"./avatar.png\\\" />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, \"Avatar renders img html element. It is important to add alt text.\\nIn case of image load failing alt will be used as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" for placeholder.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// alt is used as alt img attribute\\n<Avatar src={image} alt=\\\"Rob Johnson\\\" />\\n\\n// alt is used as title attribute\\n<Avatar alt=\\\"Rob Johnson\\\">RJ</Avatar>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"3fb4621d-c497-56b5-ab37-e6de67b3df33","slug":"core/Avatar","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}