{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/group/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Group children"},{"depth":2,"value":"With divider"}],"frontmatter":{"title":"Group","package":"@mantine/core","slug":"/core/group/","props":["Group"],"import":"import { Group } from '@mantine/core';","docs":"core/Group.mdx","source":"mantine-core/src/components/Group/Group.tsx","description":"Compose elements and components in flex container","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Group"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Group\",\n  \"order\": 1,\n  \"slug\": \"/core/group/\",\n  \"category\": \"layout\",\n  \"description\": \"Compose elements and components in flex container\",\n  \"props\": [\"Group\"],\n  \"import\": \"import { Group } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Group/Group.tsx\",\n  \"docs\": \"core/Group.mdx\",\n  \"styles\": [\"Group\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Group allows you to compose any elements and components in flex container.\\nUse these props to change elements position inside Group:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"position\"), \" controls \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"justify-content\"), \" property\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"grow\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex-grow\"), \" property, items will never wrap to next line if set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"spacing\"), \" controls space between elements \\u2013 predefined values from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.spacing\"), \" or number for spacing in px\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"noWrap\"), \" controls \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex-wrap\"), \" property and if set to true prevents elements from wrapping on next line once space on current line was exceeded\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"direction\"), \" controls \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex-direction\"), \": row (default) for horizontal orientation, column for vertical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"withGutter\"), \" when true, adds padding (equal to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"spacing\"), \" prop) to the root component, defaults to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"))), mdx(Demo, {\n    data: GroupDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"group-children\"\n  }, \"Group children\"), mdx(\"p\", null, \"Group component uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \" prop to add styles,\\nchild components must accept it otherwise unexpected negative margins will be applied the element:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Will not work with Group \\u2013 component does not handle className\\nconst MyButton => ({ label }) => <button>{label}</button>\\n\\n// Will work with Group \\u2013 handle className\\nconst MyButton => ({ label, className }) => <button className={className}>{label}</button>\\n\\n// Will work with Group \\u2013 handle className\\nconst MyButton => ({ label, ...others }) => <button {...others}>{label}</button>\\n\")), mdx(\"h2\", {\n    \"id\": \"with-divider\"\n  }, \"With divider\"), mdx(\"p\", null, \"You can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/divider/\"\n  }, \"Divider\"), \" component to add additional visual separation and spacing:\"), mdx(Demo, {\n    data: GroupDemos.divider,\n    mdxType: \"Demo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"c113e88e-a7e0-5294-8250-21bf6f17bf8e","slug":"core/Group","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}