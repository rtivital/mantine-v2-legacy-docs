{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/notification/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Colors"},{"depth":2,"value":"Accessibility"}],"frontmatter":{"title":"Notification","package":"@mantine/core","slug":"/core/notification/","props":["Notification"],"import":"import { Notification } from '@mantine/core';","docs":"core/Notification.mdx","source":"mantine-core/src/components/Notification/Notification.tsx","description":"Show dynamic notifications and alerts to user, part of notifications system","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Notification"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Notification\",\n  \"order\": 1,\n  \"slug\": \"/core/notification/\",\n  \"category\": \"feedback\",\n  \"description\": \"Show dynamic notifications and alerts to user, part of notifications system\",\n  \"props\": [\"Notification\"],\n  \"import\": \"import { Notification } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Notification/Notification.tsx\",\n  \"docs\": \"core/Notification.mdx\",\n  \"styles\": [\"Notification\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Notification is a base component for notification system.\\nBuild your own or use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/others/notifications/\"\n  }, \"@mantine/notifications\"), \" package.\"), mdx(\"p\", null, \"Notification component has 3 variants:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"default\"), \" \\u2013 with colored line on the left\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"icon\"), \" \\u2013 line is replaced with icon\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"loading\"), \" \\u2013 icon or line are replaced with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/loader/\"\n  }, \"Loader\"))), mdx(\"p\", null, \"You can use icons from any react icons library, for example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://icons.modulz.app/\"\n  }, \"radix icons\"), \" (used in mantine packages)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://feathericons.com/\"\n  }, \"feather\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://react-icons.github.io/react-icons\"\n  }, \"react-icons\"))), mdx(Demo, {\n    data: NotificationDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"colors\"\n  }, \"Colors\"), mdx(\"p\", null, \"You can choose any color defined in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#default-colors\"\n  }, \"theme\"), \":\"), mdx(Demo, {\n    data: NotificationDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, \"To support screen readers set close button aria-label or title with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"closeButtonProps\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Notification closeButtonProps={{ 'aria-label': 'Hide notification' }} />\\n<Notification closeButtonProps={{ title: 'Hide notification' }} />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"f295eb8c-1882-5e51-83f6-be4600abd7eb","slug":"core/Notification","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}