{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/anchor/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Usage with react-router and other libraries"},{"depth":2,"value":"Usage with Next Link"}],"frontmatter":{"title":"Anchor","package":"@mantine/core","slug":"/core/anchor/","props":["Anchor"],"import":"import { Anchor } from '@mantine/core';","docs":"core/Anchor.mdx","source":"mantine-core/src/components/Text/Text.tsx","description":"Display links with theme styles","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Anchor","single-node"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Anchor\",\n  \"order\": 1,\n  \"slug\": \"/core/anchor/\",\n  \"category\": \"navigation\",\n  \"description\": \"Display links with theme styles\",\n  \"props\": [\"Anchor\"],\n  \"import\": \"import { Anchor } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Text/Text.tsx\",\n  \"docs\": \"core/Anchor.mdx\",\n  \"styles\": [\"Anchor\", \"single-node\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Anchor is a wrapper around \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/text/\"\n  }, \"Text\"), \" component with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" by default:\"), mdx(Demo, {\n    data: AnchorDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage-with-react-router-and-other-libraries\"\n  }, \"Usage with react-router and other libraries\"), mdx(\"p\", null, \"You can use Anchor with react-router Link component and other similar components by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Link } from 'react-router-dom';\\nimport { Anchor } from '@mantine/core';\\n\\nfunction Demo() {\\n  return (\\n    <Anchor component={Link} to=\\\"/react-router\\\">\\n      React router link\\n    </Anchor>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"usage-with-next-link\"\n  }, \"Usage with Next Link\"), mdx(\"p\", null, \"Next Link component requires \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ref\"), \" prop usage, however all Mantine components use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \",\\nto make Anchor and other similar components work with Next Link, create wrapper component in your components folder:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// This component can be reused in every Mantine component which supports component pass through\\nimport React, { forwardRef } from 'react';\\nimport Link from 'next/link';\\n\\nexport const NextLink = forwardRef(\\n  (\\n    { href, ...others }: React.ComponentPropsWithoutRef<typeof Link>,\\n    ref: React.ForwardedRef<HTMLAnchorElement>\\n  ) => (\\n    <Link href={href}>\\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content */}\\n      <a {...others} ref={ref} />\\n    </Link>\\n  )\\n);\\n\")), mdx(\"p\", null, \"And then pass it to Button or other component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Anchor component={NextLink} href=\\\"/hello\\\">\\n  Next Link\\n</Anchor>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"ce8ef99f-e2fa-5bdd-93a4-aa4129053124","slug":"core/Anchor","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}