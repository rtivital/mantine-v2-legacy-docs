{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/shared-props/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Shared props"},{"depth":2,"value":"Colors"},{"depth":2,"value":"Sizes"},{"depth":2,"value":"Spacing and padding"},{"depth":2,"value":"Shadows"},{"depth":2,"value":"Radius"},{"depth":2,"value":"Getting element ref"}],"frontmatter":{"title":"Shared props","package":"@mantine/core","slug":"/core/shared-props/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Shared props\",\n  \"order\": 0,\n  \"slug\": \"/core/shared-props/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"shared-props\"\n  }, \"Shared props\"), mdx(\"p\", null, \"Mantine components follow the same props API for colors, spacing, padding, sizes, radius and shadows.\\nThis guide will help you understand how to change these properties.\"), mdx(\"h2\", {\n    \"id\": \"colors\"\n  }, \"Colors\"), mdx(\"p\", null, \"Mantine components work with colors defined in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#default-colors\"\n  }, \"theme.colors\"), \".\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.colors\"), \" is an object that contains an array of 10 shades per each color. To use predefined colors in components set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Badge color=\\\"teal\\\" />\\n<Button color=\\\"violet\\\" />\\n\")), mdx(\"p\", null, \"To add your own colors use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/theming-context/\"\n  }, \"MantineProvider\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Theme is deeply merged with default theme\\n<MantineProvider\\n  theme={{\\n    colors: {\\n      // Add your color\\n      'deep-blue': ['#E9EDFC', '#C1CCF6', '#99ABF0' /* ... */],\\n      // or replace default theme color\\n      blue: ['#E9EDFC', '#C1CCF6', '#99ABF0' /* ... */],\\n    },\\n  }}\\n>\\n  <YourApp />\\n</MantineProvider>\\n\")), mdx(\"p\", null, \"Note that component appearance usually depends on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variant\"), \" prop and current \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.colorScheme\"), \".\"), mdx(\"h2\", {\n    \"id\": \"sizes\"\n  }, \"Sizes\"), mdx(\"p\", null, \"Most Mantine components support \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" prop with xs, sm, md, lg and xl values:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button size=\\\"xl\\\" />\\n<Badge size=\\\"xs\\\" />\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" prop controls various css properties across all supported components,\\nin some components where size is associated with only one value, you can set it in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Slider size=\\\"xs\\\" /> // Predefined xs size\\n<Slider size={20} /> // -> 20px track height, other parts are scaled from this value\\n\")), mdx(\"h2\", {\n    \"id\": \"spacing-and-padding\"\n  }, \"Spacing and padding\"), mdx(\"p\", null, \"Components that have padding get values from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#spacing-radius-and-shadows\"\n  }, \"theme.spacing\"), \",\\ndefault values are:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"{ xs: 10, sm: 12, md: 16, lg: 20, xl: 24 }\\n\")), mdx(\"p\", null, \"To change these values set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spacing\"), \" property on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/\"\n  }, \"theme\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<MantineProvider theme={{ spacing: { xs: 15, sm: 20, md: 25, lg: 30, xl: 40 } }}>\\n  <YourApp />\\n</MantineProvider>\\n\")), mdx(\"p\", null, \"Later when you use Mantine components you can reference these values in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spacing\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"padding\"), \" props or set spacing in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Paper padding=\\\"xl\\\" /> // -> xl padding from theme.spacing\\n<Paper padding={30} /> // -> 30px padding\\n\\n<Group spacing=\\\"md\\\" /> // -> md spacing from theme.spacing\\n<Group spacing={40} /> // 40px spacing\\n\")), mdx(\"h2\", {\n    \"id\": \"shadows\"\n  }, \"Shadows\"), mdx(\"p\", null, \"Components that use box-shadow property get values from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#spacing-radius-and-shadows\"\n  }, \"theme.shadows\"), \",\\ndefault values are:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"{\\n  xs: '0 1px 3px rgba(0, 0, 0, 0.05), 0 1px 2px rgba(0, 0, 0, 0.1)',\\n  sm: '0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 10px 15px -5px, rgba(0, 0, 0, 0.04) 0px 7px 7px -5px',\\n  md: '0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 20px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px',\\n  lg: '0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 28px 23px -7px, rgba(0, 0, 0, 0.04) 0px 12px 12px -7px',\\n  xl: '0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 36px 28px -7px, rgba(0, 0, 0, 0.04) 0px 17px 17px -7px',\\n}\\n\")), mdx(\"p\", null, \"To change these values set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"shadows\"), \" property on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/\"\n  }, \"theme\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<MantineProvider\\n  theme={{\\n    shadows: {\\n      xs: '1px 1px 1px rgba(0, 0, 0, 0.3)',\\n      sm: '1px 1px 4px rgba(0, 0, 0, 0.4)',\\n      md: '3px 3px 4px rgba(0, 0, 0, 0.4)',\\n      lg: '3px 3px 4px 5px rgba(0, 0, 0, 0.4)',\\n      xl: '3px 3px 4px 15px rgba(0, 0, 0, 0.4)',\\n    },\\n  }}\\n>\\n  <YourApp />\\n</MantineProvider>\\n\")), mdx(\"p\", null, \"Later when you use Mantine components you can reference these values in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"shadow\"), \" prop or define your own shadow:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Paper shadow=\\\"xl\\\" /> // -> xl shadow from theme.shadows\\n<Paper shadow=\\\"1px 3px 4px rgba(0, 0, 0, 0.4)\\\" /> // -> your own shadow not related to theme.shadows\\n\")), mdx(\"h2\", {\n    \"id\": \"radius\"\n  }, \"Radius\"), mdx(\"p\", null, \"Components that use border-radius property get values from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#spacing-radius-and-shadows\"\n  }, \"theme.radius\"), \",\\ndefault values are:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"{ xs: 2, sm: 4, md: 8, lg: 16, xl: 32 }\\n\")), mdx(\"p\", null, \"To change these values set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"radius\"), \" property on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/\"\n  }, \"theme\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<MantineProvider theme={{ radius: { xs: 3, sm: 6, md: 9, lg: 12, xl: 15 } }}>\\n  <YourApp />\\n</MantineProvider>\\n\")), mdx(\"p\", null, \"Radius is always is set in px and in addition to predefined values you can set it in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button radius=\\\"md\\\" /> // -> md radius from theme.radius\\n<Button radius={20} /> // -> 20px border-radius\\n\")), mdx(\"h2\", {\n    \"id\": \"getting-element-ref\"\n  }, \"Getting element ref\"), mdx(\"p\", null, \"You can get ref of most components with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useRef } from 'react';\\nimport { Button, Paper, TextInput } from '@mantine/core';\\n\\nfunction Demo() {\\n  const buttonRef = useRef(); // HTMLButtonElement\\n  const paperRef = useRef(); // -> HTMLDivElement\\n  const inputRef = useRef(); // -> HTMLInputElement\\n\\n  return (\\n    <>\\n      <Button elementRef={buttonRef} />\\n      <Paper elementRef={paperRef} />\\n      <TextInput elementRef={inputRef} />\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"874ceff7-98fd-5e63-865e-884df5557325","slug":"core/shared-props","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}