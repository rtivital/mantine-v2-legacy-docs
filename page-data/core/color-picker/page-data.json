{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/color-picker/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Color format"},{"depth":2,"value":"With swatches"},{"depth":2,"value":"Size"},{"depth":2,"value":"AlphaSlider"},{"depth":2,"value":"HueSlider"},{"depth":2,"value":"Accessibility and usability"}],"frontmatter":{"title":"ColorPicker","package":"@mantine/core","slug":"/core/color-picker/","props":["ColorPicker"],"import":"import { ColorPicker } from '@mantine/core';","docs":"core/ColorPicker.mdx","source":"mantine-core/src/components/ColorPicker/ColorPicker.tsx","description":"Inline color picker","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["ColorPicker"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"ColorPicker\",\n  \"order\": 1,\n  \"slug\": \"/core/color-picker/\",\n  \"category\": \"inputs\",\n  \"description\": \"Inline color picker\",\n  \"props\": [\"ColorPicker\"],\n  \"import\": \"import { ColorPicker } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/ColorPicker/ColorPicker.tsx\",\n  \"docs\": \"core/ColorPicker.mdx\",\n  \"styles\": [\"ColorPicker\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: ColorPickerDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"color-format\"\n  }, \"Color format\"), mdx(\"p\", null, \"Component supports hex, rgb, rgba, hsl and hsla color formats.\\nSlider to change opacity is displayed only for rgba and hsla formats:\"), mdx(Demo, {\n    data: ColorPickerDemos.formatsConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"with-swatches\"\n  }, \"With swatches\"), mdx(\"p\", null, \"You can add any amount of predefined color swatches:\"), mdx(Demo, {\n    data: ColorPickerDemos.swatches,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"By default there will be 10 swatches per row, you can change this with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swatchesPerRow\"), \" prop:\"), mdx(Demo, {\n    data: ColorPickerDemos.swatchesConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"To display swatches without picker set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withPicker={false}\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fullWidth\"), \" props:\"), mdx(Demo, {\n    data: ColorPickerDemos.swatchesOnly,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"Component has 5 predefined sizes: xs, sm, md, lg and xl:\"), mdx(Demo, {\n    data: ColorPickerDemos.sizeConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"alphaslider\"\n  }, \"AlphaSlider\"), mdx(\"p\", null, \"You can import and use AlphaSlider and HueSlider components outside of ColorPicker:\"), mdx(Demo, {\n    data: ColorPickerDemos.alphaConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"hueslider\"\n  }, \"HueSlider\"), mdx(Demo, {\n    data: ColorPickerDemos.hueConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"accessibility-and-usability\"\n  }, \"Accessibility and usability\"), mdx(\"p\", null, \"ColorPicker, AlphaSlider and HueSlider components are accessible by default:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Saturation, hue and alpha sliders afe focusable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When user uses mouse to interact with slider, focus is moved on slider\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All values can be changed with arrows\")), mdx(\"p\", null, \"To make component visible for screen readers provide following props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<ColorPicker saturationLabel=\\\"Saturation\\\" hueLabel=\\\"Hue\\\" alphaLabel=\\\"Alpha\\\" />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"a2242778-1f0c-5091-836b-4a81e0ebe04a","slug":"core/ColorPicker","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}