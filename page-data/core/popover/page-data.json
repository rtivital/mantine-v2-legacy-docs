{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/popover/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Examples"},{"depth":3,"value":"Show on focus"},{"depth":3,"value":"With form"},{"depth":3,"value":"Show on hover"},{"depth":2,"value":"Position and placement"},{"depth":2,"value":"Control behavior"},{"depth":2,"value":"Close button and title"},{"depth":2,"value":"Control appearance"},{"depth":2,"value":"Initial focus"},{"depth":2,"value":"Server side rendering"}],"frontmatter":{"title":"Popover","package":"@mantine/core","slug":"/core/popover/","props":["Popover"],"import":"import { Popover } from '@mantine/core';","docs":"core/Popover.mdx","source":"mantine-core/src/components/Popover/Popover.tsx","description":"Display popover section relative to given target element","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Popover"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Popover\",\n  \"order\": 1,\n  \"slug\": \"/core/popover/\",\n  \"category\": \"overlay\",\n  \"description\": \"Display popover section relative to given target element\",\n  \"props\": [\"Popover\"],\n  \"import\": \"import { Popover } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Popover/Popover.tsx\",\n  \"docs\": \"core/Popover.mdx\",\n  \"styles\": [\"Popover\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Popover is more complex and customizable alternative to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/tooltip/\"\n  }, \"Tooltip\"), \"\\ncomponent.\"), mdx(Demo, {\n    data: PopoverDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"show-on-focus\"\n  }, \"Show on focus\"), mdx(\"p\", null, \"This example uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onFocusCapture\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onBlurCapture\"), \" events on Popover component\\nto determine if any element inside has focus:\"), mdx(Demo, {\n    data: PasswordInputDemos.strengthMeter,\n    demoProps: {\n      zIndex: 5\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"with-form\"\n  }, \"With form\"), mdx(\"p\", null, \"By default focus trap inside popover is active,\\nyou can place forms inside and focus will be kept inside popover:\"), mdx(Demo, {\n    data: PopoverDemos.form,\n    demoProps: {\n      zIndex: 4\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"show-on-hover\"\n  }, \"Show on hover\"), mdx(\"p\", null, \"To show popover on hover add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseEnter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseLeave\"), \" handlers to\\nelement that should trigger popover. Note that in this case you have to disable\\nfocus trap with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"noFocusTrap\"), \" prop:\"), mdx(Demo, {\n    data: PopoverDemos.hover,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"position-and-placement\"\n  }, \"Position and placement\"), mdx(\"p\", null, \"Popover position relative to target element is defined by:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"position\"), \" \\u2013 popover side \\u2013 top, bottom, right or left, defaults to top\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"placement\"), \" \\u2013 popover placement relative to position \\u2013 start, center or end, defaults to center\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"gutter\"), \" \\u2013 space between popover and target element in px, defaults to 10px\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popover position=\\\"bottom\\\" placement=\\\"end\\\" gutter={10} />\\n\")), mdx(\"p\", null, \"All positions and placement:\"), mdx(Demo, {\n    data: PopoverDemos.positions,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"control-behavior\"\n  }, \"Control behavior\"), mdx(\"p\", null, \"By default popover:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has focus trap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"closes when escape key is pressed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"closes when outside click is registered\")), mdx(\"p\", null, \"Usually it is a good idea to turn these settings off, if you show popover on\\nfocus or hover:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popover\\n  noFocusTrap // -> disable focus trap\\n  noEscape // -> disable escape key press handling\\n  noClickOutside // -> disable outside click handling\\n/>\\n\")), mdx(\"h2\", {\n    \"id\": \"close-button-and-title\"\n  }, \"Close button and title\"), mdx(\"p\", null, \"Popover includes optional close button and title:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"withCloseButton\"), \" prop to show close button, add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"closeButtonLabel\"), \" to set aria-label attribute on close button\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"title\"), \" prop to add title at the top of popover\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popover title=\\\"Popover title\\\" withCloseButton closeButtonLabel=\\\"Close popover\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"control-appearance\"\n  }, \"Control appearance\"), mdx(\"p\", null, \"To change popover appearance use:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"radius\"), \" \\u2013 applies border-radius from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.radius\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"spacing\"), \" \\u2013 adds padding to all sides of popover from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.spacing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shadow\"), \" \\u2013 add box-shadow from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.shadows\"))), mdx(Demo, {\n    data: PopoverDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"For additional modifications of popover body styles use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bodyClassName\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bodyStyle\"), \" props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Add inline styles to popover body\\n<Popover bodyStyle={{ width: 200, pointerEvents: 'none' }} />\\n\\n// Or with className\\n<Popover bodyClassName=\\\"my-class-name\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"initial-focus\"\n  }, \"Initial focus\"), mdx(\"p\", null, \"Popover uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/hooks/use-focus-trap/\"\n  }, \"use-focus-trap\"), \" to manage focus.\\nTo specify initial focus element add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data-autofocus\"), \" attribute:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popover>\\n  <input />\\n  {/* Second input in modal will have initial focus */}\\n  <input data-autofocus />\\n  <input />\\n</Popover>\\n\")), mdx(\"h2\", {\n    \"id\": \"server-side-rendering\"\n  }, \"Server side rendering\"), mdx(\"p\", null, \"By default Popover uses random id to connect title and body via aria- attributes.\\nThis will result in hydration mismatch if you use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"opened\"), \" popover (closed popover do not require this step) during ssr.\\nTo avoid that set static id:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popover id=\\\"my-popover\\\" opened />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"b2bb451a-2265-5057-ac8c-5cd11abc8b37","slug":"core/Popover","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}