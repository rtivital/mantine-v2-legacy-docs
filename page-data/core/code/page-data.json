{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/code/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Inline code"},{"depth":2,"value":"Block code"},{"depth":2,"value":"Custom color"},{"depth":2,"value":"Syntax highlight"}],"frontmatter":{"title":"Code","package":"@mantine/core","slug":"/core/code/","props":["Code"],"import":"import { Code } from '@mantine/core';","docs":"core/Code.mdx","source":"mantine-core/src/components/Code/Code.tsx","description":"Inline or block code without syntax highlight","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Code","single-node"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Code\",\n  \"order\": 1,\n  \"slug\": \"/core/code/\",\n  \"category\": \"typography\",\n  \"description\": \"Inline or block code without syntax highlight\",\n  \"props\": [\"Code\"],\n  \"import\": \"import { Code } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Code/Code.tsx\",\n  \"docs\": \"core/Code.mdx\",\n  \"styles\": [\"Code\", \"single-node\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"inline-code\"\n  }, \"Inline code\"), mdx(\"p\", null, \"By default Code component renders inline \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"code\"), \" html element:\"), mdx(Demo, {\n    data: CodeDemos.inline,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"block-code\"\n  }, \"Block code\"), mdx(\"p\", null, \"To render code in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pre\"), \" element pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"block\"), \" prop to Code component:\"), mdx(Demo, {\n    data: CodeDemos.block,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"custom-color\"\n  }, \"Custom color\"), mdx(\"p\", null, \"By default code has gray color,\\nyou can change it to any color from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#default-colors\"\n  }, \"theme.colors\"), \":\"), mdx(Demo, {\n    data: CodeDemos.colors,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"syntax-highlight\"\n  }, \"Syntax highlight\"), mdx(\"p\", null, \"In case you need syntax highlight like in all code examples on Mantine website,\\nuse \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/others/prism/\"\n  }, \"@mantine/prism\"), \" package:\"), mdx(Demo, {\n    data: PrismDemos.usage,\n    mdxType: \"Demo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"2268131a-1ef0-5c22-a2b1-f9d6d9531f43","slug":"core/Code","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}