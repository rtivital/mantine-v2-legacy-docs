{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/popper/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Position"},{"depth":2,"value":"Transitions"},{"depth":2,"value":"Force position update"},{"depth":2,"value":"z-index"}],"frontmatter":{"title":"Popper","package":"@mantine/core","slug":"/core/popper/","props":["Popper"],"import":"import { Popper } from '@mantine/core';","docs":"core/Popper.mdx","source":"mantine-core/src/components/Popper/Popper.tsx","description":"Render dropdown in portal with popper.js","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null,"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Popper\",\n  \"order\": 1,\n  \"slug\": \"/core/popper/\",\n  \"category\": \"misc\",\n  \"description\": \"Render dropdown in portal with popper.js\",\n  \"props\": [\"Popper\"],\n  \"import\": \"import { Popper } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Popper/Popper.tsx\",\n  \"docs\": \"core/Popper.mdx\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Popper is an utility component used under the hood in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/menu/\"\n  }, \"Menu\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/popover/\"\n  }, \"Progress\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/tooltip/\"\n  }, \"Tooltip\"), \"\\nand other Mantine components. You can use it to create your own dropdowns and popovers if Mantine components do not meet your requirements.\"), mdx(\"p\", null, \"To start using Popper add following required props first:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"referenceElement\"), \" \\u2013 element based on which popper will be positioned\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"children\"), \" \\u2013 popper content, any React node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mounted\"), \" \\u2013 current popper opened state: true to display, false to hide\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useState } from 'react';\\nimport { Popper } from '@mantine/core';\\n\\nfunction Demo() {\\n  // useState is required to store element ref, useRef won't work\\n  const [referenceElement, setReferenceElement] = useState(null);\\n\\n  return (\\n    <div>\\n      {/* Based on this button popper will be positioned */}\\n      <button ref={referenceElement}>Reference element</button>\\n      {/*\\n       * Popper is rendered inside Portal, it will be added\\n       * outside of current rendering context \\u2013 before closing body tag\\n       */}\\n      <Popper referenceElement={referenceElement} mounted>\\n        <div>Popper content</div>\\n      </Popper>\\n    </div>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"position\"\n  }, \"Position\"), mdx(\"p\", null, \"Popper position is controlled by these props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"position\"), \" \\u2013 left, right, bottom, top\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"placement\"), \" \\u2013 start, center, end\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gutter\"), \" \\u2013 spacing between reference and dropdown elements in px\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"withArrow\"), \" \\u2013 displays arrow, arrow position is calculated by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"position\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"placement\"), \" props\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"arrowSize\"), \" \\u2013 arrow size in px\")), mdx(Demo, {\n    data: PopperDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"transitions\"\n  }, \"Transitions\"), mdx(\"p\", null, \"Popper uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/transition/\"\n  }, \"Transition\"), \" component to animate presence.\\nYou can choose one of premade transitions or create your own. All premade transitions demo\\n(\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/tooltip/\"\n  }, \"Tooltip\"), \" component which uses Popper):\"), mdx(Demo, {\n    data: TooltipDemos.transitions,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can control Popper transition with following props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transition\"), \" \\u2013 premade transition name or custom transition styles object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transitionDuration\"), \" \\u2013 transition duration in ms, defaults to 0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transitionTimingFunction\"), \" \\u2013 defaults to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.transitionTimingFunction\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popper\\n  transition=\\\"rotate-left\\\"\\n  transitionDuration={150}\\n  transitionTimingFunction=\\\"ease\\\"\\n  {...otherProps}\\n/>\\n\")), mdx(\"h2\", {\n    \"id\": \"force-position-update\"\n  }, \"Force position update\"), mdx(\"p\", null, \"In some cases Popper position will get outdated since it is rendered in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/portal/\"\n  }, \"Portal\"), \"\\nPopper does not know about layout changes. To force position update provide an array of dependencies which trigger layout updates:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popper forceUpdateDependencies={[firstDependency, secondDependency]} {...otherProps} />\\n\")), mdx(\"h2\", {\n    \"id\": \"z-index\"\n  }, \"z-index\"), mdx(\"p\", null, \"By default Popper has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"z-index: 1\"), \", you can change that with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zIndex\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Popper zIndex={100} {...otherProps} />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"a6a67ffe-aa04-5088-9d82-e59db79bac99","slug":"core/Popper","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}