{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/radio-group/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Size"},{"depth":2,"value":"Controlled"},{"depth":2,"value":"Get element ref"}],"frontmatter":{"title":"RadioGroup","package":"@mantine/core","slug":"/core/radio-group/","props":["RadioGroup","Radio"],"import":"import { RadioGroup, Radio } from '@mantine/core';","docs":"core/RadioGroup.mdx","source":"mantine-core/src/components/RadioGroup/RadioGroup.tsx","description":"Capture user feedback limited to small set of options","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["RadioGroup"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"RadioGroup\",\n  \"order\": 1,\n  \"slug\": \"/core/radio-group/\",\n  \"category\": \"inputs\",\n  \"description\": \"Capture user feedback limited to small set of options\",\n  \"props\": [\"RadioGroup\", \"Radio\"],\n  \"import\": \"import { RadioGroup, Radio } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/RadioGroup/RadioGroup.tsx\",\n  \"docs\": \"core/RadioGroup.mdx\",\n  \"styles\": [\"RadioGroup\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Use RadioGroup when you need to capture user feedback limited to certain options.\\nIf you more that 5 options consider using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/select/\"\n  }, \"Select\"), \" instead of RadioGroup,\\nas it provides better UX for large data sets.\"), mdx(\"p\", null, \"Component supports all props from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/input-wrapper/\"\n  }, \"InputWrapper\"), \" component.\"), mdx(Demo, {\n    data: RadioGroupDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"Checkbox has 5 predefined sizes: xs, sm, md, lg, xl.\\nSize defines label font-size, input width and height.\"), mdx(Demo, {\n    data: RadioGroupDemos.sizes,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"You can get checkbox sizes by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RADIO_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { RADIO_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Prop value', 'Width and height'],\n    data: Object.keys(RADIO_SIZES).map(function (size) {\n      return [size, \"\".concat(RADIO_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlled\"\n  }, \"Controlled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useState } from 'react';\\nimport { RadioGroup, Radio } from '@mantine/core';\\n\\nfunction Demo() {\\n  const [value, setValue] = useState('react');\\n\\n  return (\\n    <RadioGroup\\n      value={value}\\n      onChange={setValue}\\n      label=\\\"Select your favorite framework/library\\\"\\n      description=\\\"This is anonymous\\\"\\n      required\\n    >\\n      <Radio value=\\\"react\\\">React</Radio>\\n      <Radio value=\\\"svelte\\\">Svelte</Radio>\\n      <Radio value=\\\"ng\\\">Angular</Radio>\\n      <Radio value=\\\"vue\\\">Vue</Radio>\\n    </RadioGroup>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get input ref with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop on Radio component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useRef } from 'react';\\nimport { Select } from '@mantine/core';\\n\\nfunction Demo() {\\n  const ref = useRef();\\n\\n  return (\\n    <RadioGroup>\\n      <Radio value=\\\"react\\\">React</Radio>\\n      <Radio value=\\\"svelte\\\" elementRef={ref}>\\n        Svelte\\n      </Radio>\\n    </RadioGroup>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"699608ca-7e70-5c23-8b47-59ab78cef7e6","slug":"core/RadioGroup","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}