{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/menu/","result":{"data":{"mdx":{"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"Controlled"},{"depth":2,"value":"Show menu on hover"},{"depth":2,"value":"Menu.Item component"},{"depth":2,"value":"Custom control"},{"depth":2,"value":"Change menu position"},{"depth":2,"value":"Change transition"},{"depth":2,"value":"Size and shadow"},{"depth":2,"value":"Custom component as Menu.Item"},{"depth":2,"value":"Menu.Item as Next.js Link"},{"depth":2,"value":"Customize behavior"},{"depth":2,"value":"Store items separately"},{"depth":2,"value":"Add your styles with styles API"},{"depth":2,"value":"Get element ref"},{"depth":2,"value":"Server side rendering"},{"depth":2,"value":"Accessibility and usability"}],"frontmatter":{"title":"Menu","package":"@mantine/core","slug":"/core/menu/","props":["Menu"],"import":"import { Menu } from '@mantine/core';","docs":"core/Menu.mdx","source":"mantine-core/src/components/Menu/Menu.tsx","description":"Combine a list of secondary actions into single interactive area","bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":["Menu"],"release":null,"date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"group\": \"mantine-core\",\n  \"package\": \"@mantine/core\",\n  \"title\": \"Menu\",\n  \"order\": 1,\n  \"slug\": \"/core/menu/\",\n  \"category\": \"overlay\",\n  \"description\": \"Combine a list of secondary actions into single interactive area\",\n  \"props\": [\"Menu\"],\n  \"import\": \"import { Menu } from '@mantine/core';\",\n  \"source\": \"mantine-core/src/components/Menu/Menu.tsx\",\n  \"docs\": \"core/Menu.mdx\",\n  \"styles\": [\"Menu\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Demo = makeShortcode(\"Demo\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(Demo, {\n    data: MenuDemos.usage,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlled\"\n  }, \"Controlled\"), mdx(\"p\", null, \"To control component opened state provide \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"opened\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClose\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onOpen\"), \" props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useState } from 'react';\\nimport { Menu } from '@mantine/core';\\n\\nfunction Demo() {\\n  const [opened, setOpened] = useState(false);\\n\\n  return (\\n    <Menu opened={opened} onOpen={() => setOpened(true)} onClose={() => setOpened(false)}>\\n      {/* Menu items... */}\\n    </Menu>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"show-menu-on-hover\"\n  }, \"Show menu on hover\"), mdx(\"p\", null, \"To show menu on hover set props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"trigger\"), \" to hover\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"delay\"), \" to number in ms (defaults to 0)\")), mdx(\"p\", null, \"In this case menu will use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseEnter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onFocus\"), \" events instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClick\"), \":\"), mdx(Demo, {\n    data: MenuDemos.hover,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"menuitem-component\"\n  }, \"Menu.Item component\"), mdx(\"p\", null, \"You can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/divider/\"\n  }, \"Divider\"), \" (renders horizontal line) and Menu.Item components inside Menu.\\nMenu.Item renders button and accepts props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"icon\"), \" \\u2013 icon on the left\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"children\"), \" \\u2013 item label\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"rightSection\"), \" \\u2013 any element, rendered on the right, for example, \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/core/badge/\"\n  }, \"Badge\"), \" or keyboard shortcut\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"...others\"), \" \\u2013 Menu.Item produces button element, all other props will be spread to it, for example, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onClick\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"className\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu.Item\\n  icon={<GearIcon />}\\n  onClick={() => console.log('Hello')}\\n  rightSection={\\n    <Text size=\\\"sm\\\" color=\\\"gray\\\">\\n      \\u2318K\\n    </Text>\\n  }\\n>\\n  Label\\n</Menu.Item>\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-control\"\n  }, \"Custom control\"), mdx(\"p\", null, \"By default menu button uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/action-icon/\"\n  }, \"ActionIcon\"), \" with horizontal dots.\\nYou can change it by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"control\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlRefProp\"), \" props:\"), mdx(Demo, {\n    data: MenuDemos.controls,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlRefProp\"), \" is the prop name with which element ref can be accessed.\\nIt defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" as all interactive Mantine components use it to get ref.\\nFor regular html element it will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlRefProp=\\\"ref\\\"\")), mdx(\"h2\", {\n    \"id\": \"change-menu-position\"\n  }, \"Change menu position\"), mdx(\"p\", null, \"Menu is rendered inside \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/portal/\"\n  }, \"Portal\"), \" and its position is controlled with the following props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"position\"), \" \\u2013 left, right, bottom, top\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"placement\"), \" \\u2013 start, center, end\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gutter\"), \" \\u2013 spacing between menu body and target element in px\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"withArrow\"), \" \\u2013 displays arrow, arrow position is calculated by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"position\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"placement\"), \" props\")), mdx(\"p\", null, \"Note that in most cases you will need to change \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/transition/\"\n  }, \"Transition\"), \" to match your position:\"), mdx(Demo, {\n    data: MenuDemos.positionConfigurator,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-transition\"\n  }, \"Change transition\"), mdx(\"p\", null, \"Menu is built with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/core/transition/\"\n  }, \"Transition\"), \" component.\\nYou can customize transition, timing function and duration:\"), mdx(Demo, {\n    data: MenuDemos.transitions,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"size-and-shadow\"\n  }, \"Size and shadow\"), mdx(\"p\", null, \"You can use predefined shadows defined in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/extend-theme/#spacing-radius-and-shadows\"\n  }, \"theme.shadows\"), \" or your own:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu shadow=\\\"sm\\\" /> // -> predefined small shadow\\n<Menu shadow=\\\"1px 1px 3px rgba(0, 0, 0, .1)\\\" /> // -> custom shadow\\n\")), mdx(Demo, {\n    data: MenuDemos.configurator,\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Menu has predefined sizes: xs, sm, md, lg, xl. Size prop controls menu width.\\nYou can also use number value to set width in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu size=\\\"sm\\\" /> // -> predefined small width\\n<Menu size={200} /> // -> 200px width\\n\")), mdx(\"p\", null, \"You can get predefined menu sizes by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MENU_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { MENU_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Prop value', 'Menu width'],\n    data: Object.keys(MENU_SIZES).map(function (size) {\n      return [size, \"\".concat(MENU_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"custom-component-as-menuitem\"\n  }, \"Custom component as Menu.Item\"), mdx(\"p\", null, \"By default menu items render as button, to change that set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop on Menu.Item component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Regular anchor as Menu.Item root element\\n<Menu.Item component=\\\"a\\\" href=\\\"https://mantine/dev\\\" target=\\\"_blank\\\" />\\n\\n// React router link as Menu.Item root element\\n<Menu.Item component={Link} to=\\\"/hello\\\" />\\n\")), mdx(Demo, {\n    data: MenuDemos.component,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"menuitem-as-nextjs-link\"\n  }, \"Menu.Item as Next.js Link\"), mdx(\"p\", null, \"Next Link component requires \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ref\"), \" prop usage, however all Mantine components use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \",\\nto make Menu.Item and other similar components work with Next Link, create wrapper component in your components folder:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// This component can be reused in every Mantine component which supports component pass through\\nimport React, { forwardRef } from 'react';\\nimport Link from 'next/link';\\n\\nexport const NextLink = forwardRef(\\n  (\\n    { href, ...others }: React.ComponentPropsWithoutRef<typeof Link>,\\n    ref: React.ForwardedRef<HTMLAnchorElement>\\n  ) => (\\n    <Link href={href}>\\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content */}\\n      <a {...others} ref={ref} />\\n    </Link>\\n  )\\n);\\n\")), mdx(\"p\", null, \"And then pass it to Menu.Item or other component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu.Item component={NextLink} href=\\\"/hello\\\">\\n  Next Link menu item\\n</Menu.Item>\\n\")), mdx(\"h2\", {\n    \"id\": \"customize-behavior\"\n  }, \"Customize behavior\"), mdx(\"p\", null, \"You can control menu behavior with following props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"trapFocus\"), \" \\u2013 traps focus inside menu when it is opened\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"closeOnScroll\"), \" \\u2013 closes menu when page is scrolled\")), mdx(\"p\", null, \"By default both options are \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" to ensure better accessibility, to turn them off set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu trapFocus={false} closeOnScroll={false} />\\n\")), mdx(\"h2\", {\n    \"id\": \"store-items-separately\"\n  }, \"Store items separately\"), mdx(\"p\", null, \"Menu does not support fragments, the following example \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"will not work\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Won't work, will not render items\\nconst items = (\\n  <>\\n    <Menu.Item>First</Menu.Item>\\n    <Menu.Item>Second</Menu.Item>\\n  </>\\n);\\n\\n<Menu>{items}</Menu>;\\n\")), mdx(\"p\", null, \"In case you want to store items separately use array instead of fragment:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// Works as expected\\nconst items = [\\n  <Menu.Item>First</Menu.Item>\\n  <Menu.Item>Second</Menu.Item>\\n];\\n\\n<Menu>{items}</Menu>;\\n\")), mdx(\"h2\", {\n    \"id\": \"add-your-styles-with-styles-api\"\n  }, \"Add your styles with styles API\"), mdx(\"p\", null, \"You can customize add styles to any part of Menu with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/theming/styles-api/\"\n  }, \"Styles API\"), \",\\nfor example, change hovered item color:\"), mdx(Demo, {\n    data: MenuDemos.stylesApi,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get menu control ref by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop to Menu component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useRef } from 'react';\\nimport { Menu } from '@mantine/core';\\n\\nfunction Demo() {\\n  const menuControlRef = useRef();\\n  return <Menu elementRef={menuControlRef} />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"server-side-rendering\"\n  }, \"Server side rendering\"), mdx(\"p\", null, \"Component uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/hooks/use-id/\"\n  }, \"use-id\"), \" hook to generate unique ids and aria- attributes,\\nprovide static \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"menuId\"), \" prop to prevent props mismatch:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Menu /> // -> random id generated both on client and server, props mismatch warning\\n<Menu menuId=\\\"my-menu\\\" /> // -> id is static, no mismatches\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility-and-usability\"\n  }, \"Accessibility and usability\"), mdx(\"p\", null, \"To make component more accessible for users with screen readers set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"menuButtonLabel\"), \" prop.\\nUse it in case you chose control which does not include text, for example, default ActionIcon with horizontal dots icon.\"), mdx(\"p\", null, \"Component behavior and properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When menu is opened focus is trapped inside\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When menu is closed focus is moved back to menu control\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Focus inside menu is controlled with up and down arrows, tab key has no effect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"By default when menu item is clicked, menu closes, change it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"closeOnItemClick\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu is closed when user clicks outside ot presses escape\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu control has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-haspopup\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-expanded\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-controls\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-label\"), \" attributes, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-label\"), \" is defined by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menuButtonLabel\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu body has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menu\"), \" role, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-orientation\"), \" is always set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertical\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu item has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"menuitem\"), \" role\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"1d762a50-8636-5442-95b9-dad764628ede","slug":"core/Menu","__params":{"slug":"core"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}