{"componentChunkName":"component---src-components-gallery-gallery-category-page-tsx","path":"/gallery/category/forms/","result":{"pageContext":{"category":{"slug":"forms","name":"Forms and inputs"},"components":[{"_component":"AuthenticationForm","code":"import React from 'react';\nimport { useForm, useToggle, upperFirst } from '@mantine/hooks';\nimport {\n  TextInput,\n  PasswordInput,\n  Text,\n  Paper,\n  Group,\n  PaperProps,\n  Button,\n  Divider,\n  Checkbox,\n  useMantineTheme,\n} from '@mantine/core';\nimport { GoogleButton, TwitterButton } from '../SocialButtons/SocialButtons';\n\nexport function AuthenticationForm(props: PaperProps<'div', HTMLDivElement>) {\n  const theme = useMantineTheme();\n  const [type, toggle] = useToggle('login', ['login', 'register']);\n  const form = useForm({\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      terms: true,\n    },\n\n    validationRules: {\n      email: (val) => /^\\S+@\\S+$/.test(val),\n      password: (val) => val.length >= 6,\n    },\n  });\n\n  return (\n    <Paper\n      shadow=\"sm\"\n      radius=\"md\"\n      padding=\"xl\"\n      {...props}\n      style={{\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n        ...props.style,\n      }}\n    >\n      <Text size=\"lg\" weight={500}>\n        Welcome to Mantine, {type} with\n      </Text>\n\n      <Group grow style={{ marginTop: 5, marginBottom: 15 }}>\n        <GoogleButton radius=\"xl\">Google</GoogleButton>\n        <TwitterButton radius=\"xl\">Twitter</TwitterButton>\n      </Group>\n\n      <Divider label=\"Or continue with email\" labelPosition=\"center\" />\n\n      <form onSubmit={form.onSubmit(() => {})}>\n        <Group direction=\"column\" grow style={{ marginTop: 5 }}>\n          {type === 'register' && (\n            <TextInput\n              label=\"Name\"\n              placeholder=\"Your name\"\n              value={form.values.name}\n              onChange={(event) => form.setFieldValue('name', event.currentTarget.value)}\n            />\n          )}\n\n          <TextInput\n            required\n            label=\"Email\"\n            placeholder=\"hello@mantine.dev\"\n            value={form.values.email}\n            onChange={(event) => form.setFieldValue('email', event.currentTarget.value)}\n            error={form.errors.email && 'Invalid email'}\n          />\n\n          <PasswordInput\n            required\n            label=\"Password\"\n            placeholder=\"Your password\"\n            value={form.values.password}\n            onChange={(event) => form.setFieldValue('password', event.currentTarget.value)}\n            error={form.errors.password && 'Password should include at least 6 characters'}\n          />\n\n          {type === 'register' && (\n            <Checkbox\n              label=\"I accept terms and conditions\"\n              checked={form.values.terms}\n              onChange={(event) => form.setFieldValue('terms', event.currentTarget.checked)}\n            />\n          )}\n        </Group>\n\n        <Group position=\"apart\" style={{ marginTop: 15 }}>\n          <Button variant=\"link\" color=\"gray\" onClick={() => toggle()} size=\"xs\">\n            {type === 'register'\n              ? 'Already have an account? Login'\n              : \"Don't have an account? Register\"}\n          </Button>\n          <Button type=\"submit\">{upperFirst(type)}</Button>\n        </Group>\n      </form>\n    </Paper>\n  );\n}\n","category":{"name":"Forms and inputs","path":"/gallery/category/forms/"},"url":"/gallery/component/authentication-form","attributes":{"title":"Authentication form","category":"forms","author":"rtivital","withColor":true,"dependencies":["/core/paper/","/core/text-input/","/core/password-input/","/core/checkbox/","/core/text/","/core/button/","/core/group/","/core/divider/","/hooks/use-form/","/hooks/use-toggle/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"CheckboxCard","code":"import React from 'react';\nimport cx from 'clsx';\nimport { UnstyledButton, Checkbox, Text, createStyles } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\n\nconst useStyles = createStyles((theme) => ({\n  button: {\n    display: 'flex',\n    width: '100%',\n    border: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[3]\n    }`,\n    borderRadius: theme.radius.sm,\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.colors.gray[0],\n    },\n  },\n\n  checkbox: {\n    marginRight: theme.spacing.xl,\n  },\n\n  title: {\n    marginBottom: 7,\n    lineHeight: 1,\n  },\n}));\n\ninterface CheckboxCardProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange?(checked: boolean): void;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nexport function CheckboxCard({\n  checked,\n  defaultChecked,\n  onChange,\n  title,\n  description,\n  className,\n  ...others\n}: CheckboxCardProps & Omit<React.ComponentPropsWithoutRef<'button'>, keyof CheckboxCardProps>) {\n  const classes = useStyles();\n\n  const [value, handleChange] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n    rule: (val) => typeof val === 'boolean',\n  });\n\n  return (\n    <UnstyledButton\n      {...others}\n      onClick={() => handleChange(!value)}\n      className={cx(classes.button, 'hello', className)}\n    >\n      <Checkbox\n        className={classes.checkbox}\n        checked={value}\n        onChange={() => {}}\n        tabIndex={-1}\n        size=\"md\"\n      />\n      <div>\n        <Text weight={500} className={classes.title}>\n          {title}\n        </Text>\n        <Text size=\"sm\" color=\"dimmed\">\n          {description}\n        </Text>\n      </div>\n    </UnstyledButton>\n  );\n}\n","category":{"name":"Forms and inputs","path":"/gallery/category/forms/"},"url":"/gallery/component/checkbox-card","attributes":{"title":"Card with checkbox","category":"forms","author":"rtivital","dependencies":["/core/card/","/core/checkbox/","/core/text/","/core/button/#unstyled-button","/hooks/use-uncontrolled/"],"props":{"title":"@mantine/core","description":"Core components library: inputs, buttons, overlays, etc."},"canvas":{"center":true,"maxWidth":400}}},{"_component":"CountriesSelect","code":"import React from 'react';\nimport Flag from 'react-flagpack';\nimport {\n  useMantineTheme,\n  CloseButton,\n  MultiSelect,\n  MultiSelectValueProps,\n  SelectItemProps,\n} from '@mantine/core';\nimport { countriesData } from './countries-data';\n\nfunction Value({\n  value,\n  label,\n  onRemove,\n  themeOverride,\n  classNames,\n  ...others\n}: MultiSelectValueProps & { value: string }) {\n  const theme = useMantineTheme(themeOverride);\n\n  return (\n    <div {...others}>\n      <div\n        style={{\n          display: 'flex',\n          cursor: 'default',\n          alignItems: 'center',\n          backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n          border: `1px solid ${\n            theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[4]\n          }`,\n          paddingLeft: 10,\n          borderRadius: 4,\n        }}\n      >\n        <div style={{ marginRight: 10 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div style={{ lineHeight: 1, fontSize: 12 }}>{label}</div>\n        <CloseButton onClick={onRemove} variant=\"transparent\" size={22} iconSize={14} />\n      </div>\n    </div>\n  );\n}\n\nfunction Item({ label, value, elementRef, ...others }: SelectItemProps) {\n  return (\n    <div ref={elementRef} {...others}>\n      <div style={{ display: 'flex' }}>\n        <div style={{ marginRight: 10 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div>{label}</div>\n      </div>\n    </div>\n  );\n}\n\nexport function CountriesSelect() {\n  return (\n    <MultiSelect\n      data={countriesData}\n      limit={20}\n      valueComponent={Value}\n      itemComponent={Item}\n      searchable\n      defaultValue={['US', 'DE']}\n      placeholder=\"Pick countries\"\n      label=\"Which countries did you visit last year?\"\n    />\n  );\n}\n","category":{"name":"Forms and inputs","path":"/gallery/category/forms/"},"url":"/gallery/component/countries-select","attributes":{"title":"Multiple countries select","category":"forms","author":"rtivital","dependencies":["/core/multi-select/","/core/action-icon/#close-button","react-flagpack"],"canvas":{"center":true,"maxWidth":360}}},{"_component":"GetInTouch","code":"import React from 'react';\nimport cx from 'clsx';\nimport { Sun, Phone, MapPin, AtSign } from 'react-feather';\nimport {\n  Paper,\n  Text,\n  TextInput,\n  Textarea,\n  Button,\n  Group,\n  useMantineTheme,\n  createStyles,\n} from '@mantine/core';\nimport bg from './bg.svg';\n\nconst BREAKPOINT = '@media (max-width: 755px)';\n\nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n    borderRadius: theme.radius.lg,\n    padding: 4,\n    border: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[2]\n    }`,\n\n    [BREAKPOINT]: {\n      flexDirection: 'column',\n    },\n  },\n\n  form: {\n    boxSizing: 'border-box',\n    flex: 1,\n    padding: theme.spacing.xl,\n    paddingLeft: theme.spacing.xl * 2,\n    borderLeft: 0,\n\n    [BREAKPOINT]: {\n      padding: theme.spacing.md,\n      paddingLeft: theme.spacing.md,\n    },\n  },\n\n  fields: {\n    marginTop: -12,\n  },\n\n  fieldInput: {\n    flex: 1,\n\n    '& + &': {\n      marginLeft: theme.spacing.md,\n\n      [BREAKPOINT]: {\n        marginLeft: 0,\n        marginTop: theme.spacing.md,\n      },\n    },\n  },\n\n  fieldsGroup: {\n    display: 'flex',\n\n    [BREAKPOINT]: {\n      flexDirection: 'column',\n    },\n  },\n\n  field: {\n    '& + &': {\n      marginTop: theme.spacing.sm,\n    },\n  },\n\n  contacts: {\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderRadius: theme.radius.lg - 2,\n    backgroundImage: `url(${bg})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    border: '1px solid transparent',\n    padding: theme.spacing.xl,\n    flex: '0 0 280px',\n\n    '& *': {\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.white,\n    },\n\n    [BREAKPOINT]: {\n      marginBottom: theme.spacing.sm,\n      paddingLeft: theme.spacing.md,\n    },\n  },\n\n  title: {\n    marginBottom: theme.spacing.xl * 1.5,\n\n    [BREAKPOINT]: {\n      marginBottom: theme.spacing.xl,\n    },\n  },\n\n  control: {\n    [BREAKPOINT]: {\n      flex: 1,\n    },\n  },\n}));\n\nfunction Contact({\n  className,\n  title,\n  description,\n  icon: Icon,\n}: {\n  className?: string;\n  title: string;\n  description: string;\n  icon: React.FC<React.ComponentProps<typeof Sun>>;\n}) {\n  const theme = useMantineTheme();\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-start' }} className={className}>\n      <Icon size={22} style={{ marginRight: theme.spacing.md }} />\n      <div>\n        <Text\n          size=\"xs\"\n          style={{\n            color: theme.colors.blue[0],\n          }}\n        >\n          {title}\n        </Text>\n        <Text weight={500}>{description}</Text>\n      </div>\n    </div>\n  );\n}\n\nexport function GetInTouch() {\n  const classes = useStyles();\n\n  return (\n    <Paper shadow=\"md\" radius=\"lg\">\n      <div className={classes.wrapper}>\n        <div className={classes.contacts}>\n          <Text size=\"lg\" weight={700} className={classes.title}>\n            Contact information\n          </Text>\n\n          <Group direction=\"column\" spacing=\"xl\">\n            <Contact title=\"Email\" description=\"hello@mantine.dev\" icon={AtSign} />\n            <Contact title=\"Phone\" description=\"+49 (800) 335 35 35\" icon={Phone} />\n            <Contact title=\"Address\" description=\"844 Morris Park avenue\" icon={MapPin} />\n            <Contact title=\"Working hours\" description=\"8 a.m. – 11 p.m.\" icon={Sun} />\n          </Group>\n        </div>\n\n        <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n          <Text size=\"lg\" weight={700} className={classes.title}>\n            Get in touch\n          </Text>\n\n          <div className={classes.fields}>\n            <div className={cx(classes.field, classes.fieldsGroup)}>\n              <TextInput className={classes.fieldInput} label=\"Your name\" placeholder=\"Your name\" />\n              <TextInput\n                className={classes.fieldInput}\n                label=\"Your email\"\n                placeholder=\"hello@mantine.dev\"\n                required\n              />\n            </div>\n\n            <TextInput className={classes.field} label=\"Subject\" placeholder=\"Subject\" required />\n\n            <Textarea\n              className={classes.field}\n              label=\"Your message\"\n              placeholder=\"Please include all relevant information\"\n              minRows={3}\n            />\n\n            <Group position=\"right\" className={classes.field}>\n              <Button type=\"submit\" className={classes.control}>\n                Send message\n              </Button>\n            </Group>\n          </div>\n        </form>\n      </div>\n    </Paper>\n  );\n}\n","category":{"name":"Forms and inputs","path":"/gallery/category/forms/"},"url":"/gallery/component/get-in-touch","attributes":{"title":"Contact form","category":"forms","author":"rtivital","responsive":true,"dependencies":["/core/paper/","/core/text-input/","/core/textarea/","/core/text/","/core/button/","/core/group/","react-feather","https://www.svgbackgrounds.com/"],"canvas":{"center":true,"maxWidth":800}}},{"_component":"InlineForm","code":"import React from 'react';\nimport cx from 'clsx';\nimport { createStyles, Autocomplete, NumberInput, Button } from '@mantine/core';\nimport dayjs from 'dayjs';\nimport { DateRangePicker } from '@mantine/dates';\n\nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    '@media (max-width: 755px)': {\n      padding: theme.spacing.lg,\n    },\n  },\n\n  fields: {\n    display: 'flex',\n    alignItems: 'flex-end',\n\n    '@media (max-width: 755px)': {\n      display: 'block',\n    },\n  },\n\n  field: {\n    flex: 1,\n\n    '&:first-of-type $input': {\n      borderTopLeftRadius: theme.radius.md,\n      borderBottomLeftRadius: theme.radius.md,\n\n      '&:not(:focus)': {\n        borderLeftColor: theme.colors.gray[2],\n      },\n    },\n\n    '& + &': {\n      '& $input': {\n        borderLeftWidth: 0,\n        borderRightWidth: 0,\n\n        '@media (max-width: 755px)': {\n          borderLeftWidth: 1,\n          borderRightWidth: 1,\n        },\n      },\n    },\n\n    '@media (max-width: 755px)': {\n      width: '100%',\n      maxWidth: '100% !important',\n\n      '&:not(:last-of-type)': {\n        marginBottom: theme.spacing.md,\n      },\n    },\n  },\n\n  input: {\n    borderColor: [\n      [theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[2]],\n      '!important',\n    ],\n    height: 60,\n    paddingLeft: theme.spacing.xl,\n    fontSize: theme.fontSizes.md,\n    borderLeftColor: theme.colors.gray[4],\n\n    '@media (max-width: 755px)': {\n      borderRadius: theme.radius.md,\n    },\n  },\n\n  inputLabel: {\n    marginBottom: 9,\n  },\n\n  budgetField: {\n    maxWidth: 120,\n  },\n\n  destinationField: {\n    maxWidth: 280,\n  },\n\n  control: {\n    height: 60,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n\n    '@media (max-width: 755px)': {\n      width: '100%',\n      marginLeft: 0,\n      marginTop: theme.spacing.lg,\n      borderTopLeftRadius: theme.radius.md,\n      borderBottomLeftRadius: theme.radius.md,\n    },\n  },\n}));\n\ninterface InlineFormProps extends React.ComponentPropsWithoutRef<'div'> {\n  labelClassName?: string;\n}\n\nexport function InlineForm({ labelClassName, ...props }: InlineFormProps) {\n  const classes = useStyles();\n\n  return (\n    <div {...props} className={cx(classes.wrapper, props.className)}>\n      <div className={classes.fields}>\n        <Autocomplete\n          radius={0}\n          size=\"md\"\n          data={['Australia', 'United Kingdom', 'Germany', 'Russia', 'Canada']}\n          className={cx(classes.field, classes.destinationField)}\n          placeholder=\"Destination country\"\n          label=\"Destination\"\n          variant=\"default\"\n          classNames={{ input: classes.input, label: cx(classes.inputLabel, labelClassName) }}\n        />\n\n        <DateRangePicker\n          radius={0}\n          size=\"md\"\n          className={classes.field}\n          placeholder=\"Stay dates\"\n          label=\"Stay dates\"\n          minDate={new Date()}\n          initialMonth={dayjs(new Date()).add(1, 'month').toDate()}\n          inputFormat=\"MMM D\"\n          variant=\"default\"\n          classNames={{ input: classes.input, label: cx(classes.inputLabel, labelClassName) }}\n        />\n\n        <NumberInput\n          radius={0}\n          size=\"md\"\n          className={cx(classes.field, classes.budgetField)}\n          label=\"Budget\"\n          min={150}\n          step={50}\n          defaultValue={500}\n          hideControls\n          variant=\"default\"\n          classNames={{ input: classes.input, label: cx(classes.inputLabel, labelClassName) }}\n        />\n\n        <Button className={classes.control} radius=\"md\" size=\"lg\">\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n","category":{"name":"Forms and inputs","path":"/gallery/category/forms/"},"url":"/gallery/component/inline-form","attributes":{"title":"Inline form","category":"forms","author":"rtivital","responsive":true,"withColor":true,"dependencies":["/core/paper/","/core/autocomplete/","/dates/date-picker/","/core/number-input/","/core/button/"],"canvas":{"center":true,"maxWidth":820}}},{"_component":"SocialButtons","code":"import React from 'react';\nimport { GitHubLogoIcon } from '@modulz/radix-icons';\nimport { Button, ButtonProps, Group, useMantineTheme } from '@mantine/core';\nimport { GoogleIcon } from './GoogleIcon';\nimport { TwitterIcon } from './TwitterIcon';\n\nexport function GoogleButton({ style, ...props }: ButtonProps) {\n  const theme = useMantineTheme();\n  return (\n    <Button\n      leftIcon={<GoogleIcon />}\n      variant=\"outline\"\n      color=\"gray\"\n      style={{\n        ...style,\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.white,\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n        borderColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3],\n      }}\n      {...props}\n    />\n  );\n}\n\nexport function FacebookButton({ style, ...props }: ButtonProps) {\n  return <Button style={{ ...style, backgroundColor: '#4267B2', color: '#fff' }} {...props} />;\n}\n\n// Generic arguments are used to support custom component in TypeScript\nexport function TwitterButton<\n  C extends React.ElementType = 'button',\n  R extends HTMLElement = HTMLButtonElement\n>({ style, ...props }: ButtonProps<C, R>) {\n  const theme = useMantineTheme();\n  return (\n    <Button\n      leftIcon={<TwitterIcon />}\n      variant=\"outline\"\n      style={{\n        ...style,\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.white,\n        borderColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3],\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport function GithubButton({ style, ...props }: ButtonProps) {\n  return (\n    <Button\n      {...props}\n      leftIcon={<GitHubLogoIcon />}\n      style={{\n        ...style,\n        backgroundColor: '#000',\n        color: '#fff',\n      }}\n    />\n  );\n}\n\nexport function SocialButtons() {\n  return (\n    <Group position=\"center\" withGutter>\n      <GoogleButton>Continue with Google</GoogleButton>\n      <TwitterButton<'a', HTMLAnchorElement>\n        component=\"a\"\n        href=\"https://twitter.com/mantinedev\"\n        target=\"_blank\"\n      >\n        Follow on Twitter\n      </TwitterButton>\n      <FacebookButton>Sign in with Facebook</FacebookButton>\n      <GithubButton>View on GitHub</GithubButton>\n    </Group>\n  );\n}\n","category":{"name":"Forms and inputs","path":"/gallery/category/forms/"},"url":"/gallery/component/social-buttons","attributes":{"title":"Social buttons","category":"forms","author":"rtivital","dependencies":["/core/button/","/core/group/","@modulz/radix-icons"],"canvas":{"center":true}}}]}},"staticQueryHashes":["2731172446","3701445061","655967936"]}